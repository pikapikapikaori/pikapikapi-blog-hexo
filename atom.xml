<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ピカピカピ</title>
  
  <subtitle>李亦杨 / 李亦楊 / Jeff Li</subtitle>
  <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/atom.xml" rel="self"/>
  
  <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/"/>
  <updated>2024-07-23T13:47:53.478Z</updated>
  <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/</id>
  
  <author>
    <name>李亦杨 / 李亦楊 / Jeff Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日本旅行随拍 令和六年二月</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/</id>
    <published>2024-03-01T07:53:38.000Z</published>
    <updated>2024-07-23T13:47:53.478Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-14.jpg" alt="picture"></p><blockquote><p>本文首发于个人博客<br>发表日期：2024.03.01</p></blockquote><p>令和六年二月十七日至令和六年二月二十四日。</p><h1 id="北海道：札幌-小樽"><a href="#北海道：札幌-小樽" class="headerlink" title="北海道：札幌 &amp; 小樽"></a>北海道：札幌 &amp; 小樽</h1><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-2.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-3.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-4.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-5.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-6.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-7.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-8.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-9.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-10.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-1.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-11.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-12.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-13.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-14.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-15.jpg" alt="picture"></p><h1 id="越後湯沢"><a href="#越後湯沢" class="headerlink" title="越後湯沢"></a>越後湯沢</h1><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-17.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-18.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-19.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-16.jpg" alt="picture"></p><h1 id="横浜-東京：ロボット"><a href="#横浜-東京：ロボット" class="headerlink" title="横浜 &amp; 東京：ロボット"></a>横浜 &amp; 東京：ロボット</h1><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-21.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-22.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-23.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-24.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-25.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-26.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-27.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-28.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-29.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-30.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-31.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-32.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-33.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-34.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-35.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-36.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-37.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-38.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-39.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-40.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-41.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-42.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-20.jpg" alt="picture"></p><h1 id="京都"><a href="#京都" class="headerlink" title="京都"></a>京都</h1><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-44.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-45.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-46.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-47.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-48.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-49.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-50.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-51.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-52.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-53.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-43.jpg" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2024/03/01/JPTra-20240217/picture-14.jpg&quot; alt=&quot;picture&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2024.03.01</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="アルバム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0/"/>
    
    <category term="旅行" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>2023年度TV动画单集十选</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/</id>
    <published>2024-01-08T06:11:28.000Z</published>
    <updated>2024-07-23T13:47:55.030Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/cover-picture.jpg" alt="cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2024.01.08</p></blockquote><p>很久不写评论了。年中开始正好空闲时间渐多，闲来无事为了记录也为了练练笔故而今年决定每个季度简单记录一下印象比较深的动画片。冬季动画错过了成文的时机，春夏秋季度的动画可见：</p><ul><li><a href="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/" title="季度印象最深刻单集 2023.04">2023 春季动画（2023.04）</a></li><li><a href="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/" title="季度印象最深刻单集 2023.07">2023 夏季动画（2023.07）</a></li><li><a href="/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/" title="季度印象最深刻单集 2023.10">2023 秋季动画（2023.10）</a></li></ul><p>年选十回虽说是十回，然而对的上自己口味的并没有那么多。也不愿为了填充十回的数量而生搬硬凑，最终绞尽脑汁也只选出五话，也只能如此了。</p><p>先简述下选集规则吧：</p><ul><li>2023年内初次放送的TV&#x2F;WEB动画内单集、2023年内作为BD&#x2F;DVD特典发售的OVA&#x2F;OAD</li><li>每作仅限一集（同一季度年内两季度分割放送视为一作、同系列不同季度视为不同作）</li><li>仅代表个人口味</li></ul><h1 id="「アイドルマスター-シンデレラガールズ-U149」-4-「羽が折れているのに飛んでいくもの、なに？」"><a href="#「アイドルマスター-シンデレラガールズ-U149」-4-「羽が折れているのに飛んでいくもの、なに？」" class="headerlink" title="「アイドルマスター シンデレラガールズ U149」 #4 「羽が折れているのに飛んでいくもの、なに？」"></a>「アイドルマスター シンデレラガールズ U149」 #4 「羽が折れているのに飛んでいくもの、なに？」</h1><blockquote><p>脚本： 村山沖 <br>絵コンテ：河原龍太 <br>演出： 河原龍太 <br>作画監督： 野田猛 <br>播出时间：2023.04.26</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-1.jpg" alt="picture"></p><p>冈本学在21年无职转生（「無職転生 ～異世界行ったら本気だす～」）大展身手后作为监督负责的第二部作品，作画演出分镜多方面的用心程度上无不延续了无职转生的超高质量。尽管本作后段内核已经出现了把握上的些许偏差（为了让偶像带去梦想甚至要牺牲staff自己家庭中孩童的微小快乐），甚至于在一些演出上出现了用力过猛的状况，然而这也不能否定本作前期单回的出色。</p><p>延续本家单回关注单一角色单元剧、单回暗埋c位伏线完成最终情感爆发到完成live的传统，本作ep4作为关注于桃华的单回，可说是质量最高的几集之一。作为应当贯穿近乎全部单元回的爱丽丝伏线在本集中被巧妙转化为了与桃华相对比的暗线，对桃华的塑造不仅从周边staff上展现，更是从与她同作为偶像的爱丽丝上衬出。相比于服饰小物的直观对比，构图上的展现更加直观，作为背景&#x2F;调度物的建筑结构无情地将桃华与他人隔开。本身带着神秘学色彩的寺庙更是加剧了这一压抑感。那段酣畅淋漓的、展现桃华第一视角的蹦极作画完成了情感上的宣泄，从此做作的小物退出了画面，无情的建筑结构也似乎披上了温情，成为主动消除桃华与他人距离的存在。</p><h1 id="「ワールドダイスター」-10-「それぞれの幻影」"><a href="#「ワールドダイスター」-10-「それぞれの幻影」" class="headerlink" title="「ワールドダイスター」 #10 「それぞれの幻影」"></a>「ワールドダイスター」 #10 「それぞれの幻影」</h1><blockquote><p>脚本：江嵜大兄 <br>絵コンテ·演出：伊東優一 <br>作画監督：安形佳己、王宣静、他 <br>播出时间：2023.06.11</p></blockquote><p>超能力在演剧主题中的加入不多作置评，然而舞台装置在叙事甚至于画面中的直接出现事实上给与了从调度与演出层面刻画角色的更多可能。对此笔者印象最深的其实是「SHINE POST」那句对演出结束后观众席的评判，不过这里暂且略去不表。本集借助于以灯光效果为代表的舞台装置合理地将角色的心境纳入到调度与画面共同组成的叙事结构中，又能借助以harmony为代表的古典动画手段暗表情思，十分犀利。</p><h1 id="「BanG-Dream-It’s-MyGO-」-10-「ずっと迷子」"><a href="#「BanG-Dream-It’s-MyGO-」-10-「ずっと迷子」" class="headerlink" title="「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」"></a>「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」</h1><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-4.png" alt="picture"></p><blockquote><p>脚本：後藤みどり <br>絵コンテ：梅津朋美(エディッツ) <br>演出：梅津朋美(エディッツ) <br>CGディレクター：大森 大地、遠藤 求 <br>播出时间：2023.08.17</p></blockquote><p>歇斯底里女同闹麻炒作动漫，全3D制作却表现出了多方面的高水平。ep3、ep7等都有着不少的话题度，而作为直接点出标题、乐队名中“Mygo&#x2F;迷子”双关意味的本集，则是对乐队五人从形式上的相聚到分离再到真正聚合的最终完成。情感上远超ep3的程度，同样借助于舞台装置完成了调度、画面与叙事的多重塑造，而叙事结构与音乐母题的高度一致性更为可圈可点。歌曲中作为叙事载体的詩（うた）重聚为形式上的歌（うた）的全过程，其与乐队成员、乐器构成上的对应关系不言自明。</p><h1 id="「英雄教室」-10-「俺よりうまいものに逢いに行く」"><a href="#「英雄教室」-10-「俺よりうまいものに逢いに行く」" class="headerlink" title="「英雄教室」 #10 「俺よりうまいものに逢いに行く」"></a>「英雄教室」 #10 「俺よりうまいものに逢いに行く」</h1><blockquote><p>脚本：ハヤシナオキ <br>絵コンテ：大平直樹 <br>演出：工藤寛顕 <br>総作画監督：川村幸祐 <br>播出时间：2023.09.10</p></blockquote><p>纯粹的厕纸改动漫从第一集开篇无敌勇者找朋友开始便一眼望穿，然而弥足珍贵的是精确把握情感调度的同时又不忘加入对经典的neta作为调剂的出色结构。继ep8暗指SAC，ep9以EVA逆A巨人哥斯拉的neta贯穿整集之后，ep10的魔爪伸向出崎统标志性的harmony与三回pan，在大量插科打诨后借助对明日之丈的neta实现了情绪上的小爆发，以此完成了一个最标准的英雄之旅（A Hero’s Journey）结构。如此淳朴的欢乐与感动实在是太弥足珍贵了。</p><h1 id="「川越ボーイズ・シング」-9-「いつかのアイムソーリー」"><a href="#「川越ボーイズ・シング」-9-「いつかのアイムソーリー」" class="headerlink" title="「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」"></a>「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」</h1><blockquote><p>脚本：川越学園文芸部 <br>絵コンテ・演出・作画監督：武内宣之 <br>播出时间：2023.12.04</p></blockquote><p>几乎可以被直接作为垃圾丢掉的动画，最终话直到本文成文时仍未播出。然而可能也正因此才使本集更加突出，足以在秋季动画中留下一笔。夸张的广角、克制的剧伴与刻意强调的背景音从一开始便突兀地展现了极压抑的氛围，而这一切的不适感则春风化雨般的被表露情绪的合唱所消解。最难能可贵的是最后并没有让所谓不可或缺的伙伴生硬地留下来以满足美好大团圆的幻想，而是更现实地创造了一个对双方都相对圆满的离别。</p><h1 id="年度最佳"><a href="#年度最佳" class="headerlink" title="年度最佳"></a>年度最佳</h1><p>只看TV&#x2F;WEB动画的最好单集未免有些太过偏颇，最后再简单记录下今年看过的一些其他想说说的动画。</p><h2 id="最佳剧场：「アイカツ！-10th-STORY-～未来へのSTARWAY～」"><a href="#最佳剧场：「アイカツ！-10th-STORY-～未来へのSTARWAY～」" class="headerlink" title="最佳剧场：「アイカツ！ 10th STORY ～未来へのSTARWAY～」"></a>最佳剧场：「アイカツ！ 10th STORY ～未来へのSTARWAY～」</h2><blockquote><p>監督：木村隆一 <br>脚本：加藤陽一 <br>上映时间：2023.01.20</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-2.jpg" alt="picture"></p><p>献给长大成人后的、十年前观看初代偶活的粉丝的纪念性剧场。然而远比先前的「魔女見習いをさがして」，也远比之后的「キボウノチカラ～オトナプリキュア’23～」更好，是真正考虑了粉丝心情的动画。笔者当时正值大学将毕业的时期，留下如此评论：</p><blockquote><p>在自己也将毕业的这个时点看感触还真是微妙。毕业并不是什么了不得的大事，要缅怀的青春也早已在不经意间流去，离别之后的未来也绝不是什么星星闪闪的道路。相比于EVA那充满说教意味的圆满到不能再圆满的补完，我倒是更被她们用片刻青春编织出的无限延伸到未来的梦打动。就算被迫地走向再平凡普通的未来也不要紧，那是曾经闪耀的我们，以及你们，可以无数次重新开始的STARWAY。</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-3.jpg" alt="picture"></p><p>偶像正因不是永恒的所以才永恒的美丽。别离了学生时期才能参与的偶像活动后，长大成人、变得成熟后的她们的道路又在哪里？我不明白。巧妙编排的三集TV动画中落在最终话的，是在描述大人们的她们日常生活的一集之后的，重新回顾毕业live的一集。偶活精神连接到了无限延伸的未来，正因如此笔者还愿意相信那个她们将一切落在的、闪闪发光的STARWAY上。</p><h2 id="最佳机器人：「グリッドマン-ユニバース」"><a href="#最佳机器人：「グリッドマン-ユニバース」" class="headerlink" title="最佳机器人：「グリッドマン ユニバース」"></a>最佳机器人：「グリッドマン ユニバース」</h2><blockquote><p>監督：雨宮哲 <br>脚本：長谷川圭一、雨宮哲 <br>上映时间：2023.03.24</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-5.jpeg" alt="picture"></p><p>古力特与电光机王的续作，完美收结一切的粉丝向剧场。雨宫那从动画人博览会开始便心心念念的古力特动画在他心中大概是有了一个不错的结尾。我喜欢的一切大概都在这里了。</p><p>約束と、愛と、賞味期限。</p><h2 id="最佳人设：「ひろがるスカイ！プリキュア」"><a href="#最佳人设：「ひろがるスカイ！プリキュア」" class="headerlink" title="最佳人设：「ひろがるスカイ！プリキュア」"></a>最佳人设：「ひろがるスカイ！プリキュア」</h2><blockquote><p>監督：小川孝治 <br>脚本：加藤還一、金月龍之介、井上美緒、山岡潤平、成田良美、守護このみ、伊藤睦美、村山功 <br>开播时间：2023.02.05</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-6.jpg" alt="picture"></p><p>光美做出相当改变的一作。同年的男人光美舞台剧企划、yes precure续作大人光美动画企划等等，而本作更是首次加入了男人光美与大人光美作为主要角色，主角也选择了蓝色作为主色。脚本制作上希望回归初代的两人情感，也有不少单回做出了大胆的改变：全片不出现怪物而主角变身是为了帮助一般市民。尽管做出了如此多看似相当积极的改变然而动画本身实在鸡肋。然而人设确实是好看的，这就是斎藤敦史哥的含金量。</p><h2 id="最佳op-ed：「無職転生Ⅱ-～異世界行ったら本気だす～」"><a href="#最佳op-ed：「無職転生Ⅱ-～異世界行ったら本気だす～」" class="headerlink" title="最佳op&#x2F;ed：「無職転生Ⅱ ～異世界行ったら本気だす～」"></a>最佳op&#x2F;ed：「無職転生Ⅱ ～異世界行ったら本気だす～」</h2><blockquote><p>監督：平野宏樹 <br>脚本：漆原虹平、大野敏哉、高山淳史 <br>开播时间：2023.07.02</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-8.jpg" alt="picture"></p><p>制作周期管理不顺与大量核心人员离职等诸多原因导致本作二期的制作质量实在一言难尽，脚本上的最后坚持也能看出staff对本作的热爱。尽管如此，本作的op可说是延续了一期的出色质量。“迈出一步”这一行为作为全系列的最核心在这一op中被继续体现：伴着鲁迪的行走，他与其他人建立起了联系，其他人将这种联系化为了力量，而这股力量本身也转而成为了鲁迪自身的力量。op影像构建的思路实质上与一期几个出色单回的思路有着一定程度上的一致性，鲁迪转生前后身份行为的对比更是突出“迈出一步”这一核心的最直接手段。窗户的意象手段同样由一期延续到了op甚至于正片之中，作为鲁迪与他人建立联系的渠道存在着。在此之上更为明显的三色鸟更不必多说了。</p><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-7.jpg" alt="picture"></p><h2 id="最佳厕纸改：「陰の実力者になりたくて！-2nd-season」"><a href="#最佳厕纸改：「陰の実力者になりたくて！-2nd-season」" class="headerlink" title="最佳厕纸改：「陰の実力者になりたくて！ 2nd season」"></a>最佳厕纸改：「陰の実力者になりたくて！ 2nd season」</h2><blockquote><p>監督：中西和也 <br>脚本：加藤還一 <br>开播时间：2023.10.04</p></blockquote><p><img src="/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/picture-9.jpg" alt="picture"></p><p>最佳单回中虽然没有提到，然而影子大人自22年的一期以来都保持了不错的改变水准。尽管二期整体不如一期来的那么有趣，不过从整体制作上就足见中西对本作的热爱。无论是用爱发电的几个作画质量不错的一人原画回，还是对趣味性与所谓龙傲天情节带来的爽快感的把控都相当出色，在此之上还能用心绘制众多的女性角色，相当完美地表现出了半自动误解流轻小说的最大趣味所在。</p><h2 id="最佳原创：「オーバーテイク！」-「BIRDIE-WING-Golf-Girls’-Story-Season-2」"><a href="#最佳原创：「オーバーテイク！」-「BIRDIE-WING-Golf-Girls’-Story-Season-2」" class="headerlink" title="最佳原创：「オーバーテイク！」 &amp; 「BIRDIE WING -Golf Girls’ Story- Season 2」"></a>最佳原创：「オーバーテイク！」 &amp; 「BIRDIE WING -Golf Girls’ Story- Season 2」</h2><p>虽说是最佳原创但实质上是把邦多利企划排除后的最佳原创，或者也可以说是2D动画最佳。</p><h2 id="「BIRDIE-WING-Golf-Girls’-Story-Season-2」"><a href="#「BIRDIE-WING-Golf-Girls’-Story-Season-2」" class="headerlink" title="「BIRDIE WING -Golf Girls’ Story- Season 2」"></a>「BIRDIE WING -Golf Girls’ Story- Season 2」</h2><blockquote><p>監督：稲垣隆行 <br>脚本：黒田洋介 <br>开播时间：2023.04.07</p></blockquote><p>贫穷但凭借着相当的创意与用心表现出了最大的趣味。黑田对neta与情节设置的把控达到了极出色的地位，而在此之上古谷彻与池田秀一的加入更是添加了不少作品之外的趣味性，也因此，相信每一个敢达吃都能在本作中发现别样的乐趣。</p><h2 id="「オーバーテイク！」"><a href="#「オーバーテイク！」" class="headerlink" title="「オーバーテイク！」"></a>「オーバーテイク！」</h2><blockquote><p>監督：あおきえい <br>脚本：高山カツヒコ、あおきえい、関根アユミ <br>开播时间：2023.10.01</p></blockquote><p>淳朴的青春赛车片吧可以说是，不是很赛车，然而短短12集聚焦于两个主角的心结，非常自然地将不同时序内互成因果的事件娓娓道来，又自然地过渡到了矛盾的解决。在多个角色塑造相当丰富的基础上，又能看似不经意地将一些微小的改变落实，这大概也是最难能可贵的地方了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2024/01/08/YearBest-2023-20240106/cover-picture.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="年选" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%B9%B4%E9%80%89/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>季度印象最深刻单集 2023.10</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/</id>
    <published>2024-01-02T06:06:55.000Z</published>
    <updated>2024-07-23T13:47:54.702Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/cover-picture.JPG" alt="cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2024.01.02</p></blockquote><h1 id="「薬屋のひとりごと」-4-「恫喝」"><a href="#「薬屋のひとりごと」-4-「恫喝」" class="headerlink" title="「薬屋のひとりごと」 #4 「恫喝」"></a>「薬屋のひとりごと」 #4 「恫喝」</h1><blockquote><p>播出时间：2023.10.28</p></blockquote><p>倒不是说本集写得有多么多么好或者说画的也多么多么厉害，应该说制作上比较用心或者说有诚意。一改前三集到的风格，本集在作画意味上人物的小动作都相当之多。尽管不难发现roto的大量应用，然而愿意为这么多人物设计这么多小动作并在画面上表现出来就已经很难得。动态的画面而非手冢追求的有限动画的极意这一点就带来了相当的观看体验。</p><h1 id="「葬送のフリーレン」-9-「断頭台のアウラ」"><a href="#「葬送のフリーレン」-9-「断頭台のアウラ」" class="headerlink" title="「葬送のフリーレン」 #9 「断頭台のアウラ」"></a>「葬送のフリーレン」 #9 「断頭台のアウラ」</h1><blockquote><p>播出时间：2023.11.03</p></blockquote><p>本季度的潮男动画之一，YOASOBI和漫画两方相辅相成的炒作动漫。尽管赢在题材选择足够好，着眼于勇者死后魔法使的带娃故事本身，又无处不再强调时间流逝，然而小段落故事集却都只能做到要么一会cue一下对过去勇者小队的回忆，要么就只能拿出中忍考试那样的打打打，这样的漫画真的有趣吗。而动画却又对时间流逝这一点少加强调，进一步弱化了最亮点的地方。也因此，大力宣发的OP实质上也只有两卡能够得我心：一是如下GIF所展示的芙莉莲在起步向前走前的一小段中心变化的作画，用右脚落下的小动作和左脚鞋子褶皱的请问变化生动地暗示了芙莉莲从驻足到决心再到向前迈进的一连串动作，被限制在小腿部的画框却借助于这一点点的作画就向观众暗示了画框外的人物动作，但又不直接画出使得观众浮想联翩。另外一点则是在结尾处，将勇者时期站在最后的芙莉莲与带娃时站在最前方的芙莉莲进行了画面移动后的拼接，倒是很好地揭示了作品最大的亮点。</p><p><img src="/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/picture-1.gif" alt="picture"></p><p>说回本集，应该说是很纯粹凭作画力制胜的一集。广受赞赏的两段穿脱衣（修塔尔克、费伦）转描味太明显，虽然修的还不错但置于前后画面之内难免过于生硬。而最大的亮点果然还是在女魔族和修塔尔克打打打的地方。从拖斧子举起再到蹲下这一段，泥土碎屑受到重力落下的速度感与摩擦力带来的粘滞感都很好地体现出了，另外蹲下前身体小幅前倾的细微动作也暗示了作画时对于动作本身的设计与考量都非常到位。踩点的完美选择使得这一段即使不是一拍一却达到了相当好的效果，确实是好看的作画。</p><p><img src="/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/picture-2.gif" alt="picture"></p><h1 id="「川越ボーイズ・シング」-9-「いつかのアイムソーリー」"><a href="#「川越ボーイズ・シング」-9-「いつかのアイムソーリー」" class="headerlink" title="「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」"></a>「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」</h1><blockquote><p>播出时间：2023.12.04</p></blockquote><p>淳朴垃圾动画中的异质优秀回，说是神回未免太过夸大，不过也足够在本季留下一笔。本话从开篇开始就用一个个扭曲的广角大特写给出压抑的氛围，克制的剧伴与被强调的背景音很明显加剧了氛围的整体走向。更难能可贵的则是本话最后并没有让所谓不可或缺的伙伴生硬地留下来以满足美好大团圆的幻想，而是更现实地创造了一个对双方都相对圆满的离别，这一点在这个片中实在是有些难能可贵了。</p><h1 id="「陰の実力者になりたくて！-2nd-season」-11-「決断」"><a href="#「陰の実力者になりたくて！-2nd-season」-11-「決断」" class="headerlink" title="「陰の実力者になりたくて！ 2nd season」 #11 「決断」"></a>「陰の実力者になりたくて！ 2nd season」 #11 「決断」</h1><blockquote><p>播出时间：2023.12.13</p></blockquote><p>半自动流轻改动画影子大人一期在去年就已经大获好评，而前几集的略显低迷后，中西和也回归分镜演出的本集无疑拿出了最符合影子大人的安排。不仅在对剧情节奏的把控上极其完美，A part安排的数个搞笑情节（延续至上集的女仆与epsilon、与前形成鲜明对比的三回多艾姆公爵）能恰到好处的搏人一笑而又不至于喧宾夺主（如同#10希德与萝兹对话的一幕）而在进入主线后的情节安排也相当赶紧利落，数幕被良好的展现而又不会挤占彼此的时长。在误解系大前提的条件下借助出色的演出与分镜让高潮前萝兹戴戒指一幕在初看时华丽帅气又能让观众在事后回想时回味出其中的趣味。而在最高潮处借助大量市场展现黑色蔷薇出场与惊慌无措的群众后以奏响乐曲的暗影一刀切断黑色蔷薇的手臂作结完成情感上的突然收场，直接为最终集完成了最好的造势。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2024/01/02/SeasonBest-202310-20231111/cover-picture.JPG&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="动画季度总结" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%8A%A8%E7%94%BB%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>随记：近日玩具 癸卯年癸亥月甲午日</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/</id>
    <published>2023-12-02T06:39:48.000Z</published>
    <updated>2024-07-23T13:47:54.114Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/cover-picture.gif" alt="picture"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.12.02</p></blockquote><p>癸卯年癸亥月甲午日，申城。</p><p>phat偶像大师本家系列收齐了，不过miki以外的还没拆。15周年纪念的三人组、e8的miki睡美人，还有几个高垣枫和涩谷凛的手办也还没拆。另外不得不说偶像大师在国内的热度确实太低了，手办基本都是大降价。</p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-4.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-6.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-7.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-1.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-8.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-5.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-3.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-2.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-9.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-10.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-11.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-12.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-13.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-14.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-15.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-16.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-17.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-18.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-19.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-20.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-21.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-22.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-23.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-24.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-25.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-26.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/picture-27.jpeg" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/12/02/Notes-20231202/cover-picture.gif&quot; alt=&quot;picture&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2023.12</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="アルバム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0/"/>
    
    <category term="アニメ" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%8B%E3%83%A1/"/>
    
    <category term="ゲーム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
    <category term="玩具" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%8E%A9%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>季度印象最深刻单集 2023.07</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/</id>
    <published>2023-09-28T06:03:07.000Z</published>
    <updated>2024-07-23T13:47:54.614Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/cover-picture.JPG" alt="cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.09.28</p></blockquote><h1 id="「BanG-Dream-It’s-MyGO-」-3-「CRYCHIC」"><a href="#「BanG-Dream-It’s-MyGO-」-3-「CRYCHIC」" class="headerlink" title="「BanG Dream! It’s MyGO!!!!!」 #3 「CRYCHIC」"></a>「BanG Dream! It’s MyGO!!!!!」 #3 「CRYCHIC」</h1><blockquote><p>播出时间：2023.06.29</p></blockquote><p>7月早两天开播的纯3D动画，实在是意料之外的惊喜。在前两集的蓄势之后，#3完全采用灯的第一视角主观镜头，由视角带来的信息量限制与情感流露变得比客观镜头自然得多。主观视角→笔记本文字的频繁转换与直接黑底白字的演出手法类似而又全然不同。以文字暗示情感的同时却不会将情感突然的中断来完成情感的积蓄，借助灯书写的文字完成专场与情感提示使得情感的流淌更加连续。作为情感爆发口而被歌唱出的春日影却不是彻底的歇斯底里，而是含蓄而克制的呐喊。诸多小物件的运用，多次出现的镜面则成为了少数情感的缺口，给予了灯与观众一个第三者的客观视角，也由此完成了无法达到的与自身的交互。</p><p>短短24分钟却在几乎全程主观镜头的前提下完成了几次自然的时间转换，完整地展现了灯与爱音相遇前类似的分离到重聚，以及再到分离。调度的高度相似性也成为了后续集数的铺垫，为之后留下了相当的可能性。这么看来前三集大概确实是一个整体，唯有像这样同时放出才能让观众在短时间内积蓄起期望的情感。</p><h1 id="「呪術廻戦-第2期」-25-「懐玉」"><a href="#「呪術廻戦-第2期」-25-「懐玉」" class="headerlink" title="「呪術廻戦 第2期」 #25 「懐玉」"></a>「呪術廻戦 第2期」 #25 「懐玉」</h1><blockquote><p>播出时间：2023.07.06</p></blockquote><p>可以说是本季度监督御所園翔太在他负责的电锯人#8的加强版，a part给人的印象是极有味道的日式恐怖。一方面，从景观中零星的异象被发现以及夜幕中的空镜头，引到作为a part主角的两人进入旧屋，穿插令人印象极深刻的甚至连绘柄和着色都与赛璐璐动画类似的“过去”影像，诸多要素营造恐怖氛围的同时也不忘挑动起观众的兴奋感。而在借自然城市景观完成对情绪的铺垫后，歌姬进入旧宅的部分则大量使用低机位推拉镜、鱼眼镜头等在TV动画中不常见的规格进一步维持着紧张恐怖的情绪。</p><p>当然由这一部份的超规格引导出的也是作画层面质量的不统一，尤其是歌姬一个人踏入房间的那一段低机位，与前后的部分无论从张数还是修正上都相差太多，难免有突兀感。此外，b part实在太儿戏。</p><h1 id="「ゾン100～ゾンビになるまでにしたい100のこと～」-1-「アキラ-オブ-ザ-デッド」"><a href="#「ゾン100～ゾンビになるまでにしたい100のこと～」-1-「アキラ-オブ-ザ-デッド」" class="headerlink" title="「ゾン100～ゾンビになるまでにしたい100のこと～」 #1 「アキラ オブ ザ デッド」"></a>「ゾン100～ゾンビになるまでにしたい100のこと～」 #1 「アキラ オブ ザ デッド」</h1><blockquote><p>播出时间：2023.07.09</p></blockquote><p>很厉害的一话。从开场开始的强力作画贯穿始末，无论是obake还是摄影机移动下的透视变化都画的相当好看。a part为了塑造社畜阴暗情绪的压抑从开始的辅以不同景深下的稳定的中近景镜头，再变化到鱼眼镜头与晃动的、倾斜的镜头的逐渐增加，几处匹配专场也看得出用心。包括到后面色彩的消失、画框线条的抖动、噪点的出现，等等。b part开始由日常到非日常的转换也相当出彩。高密度的动态作画、色彩由油漆斑点到前景的落叶再到滤镜以及最终的恢复色彩、男主的冲破画框都很有看点。</p><p>不过实际上a part有些卡镜头被撑的太满，有种微妙的不协调感，不像是故意如此的。可能也说明了对2.35画幅的把控仍有不足。</p><h1 id="「無職転生Ⅱ-～異世界行ったら本気だす～」-1-「失意の魔術師」"><a href="#「無職転生Ⅱ-～異世界行ったら本気だす～」-1-「失意の魔術師」" class="headerlink" title="「無職転生Ⅱ ～異世界行ったら本気だす～」 #1 「失意の魔術師」"></a>「無職転生Ⅱ ～異世界行ったら本気だす～」 #1 「失意の魔術師」</h1><blockquote><p>播出时间：2023.07.09</p></blockquote><p>想了想还是姑且列一下吧。尽管冈本学等一众一期中坚从Studio Bind跑去做U49，加上#0紧张的工期与砍了开头张数的演出，本话终于是找回了一点一期的感受。在鲁迪踏出那一步前全无bgm的设置，使得观众的情绪也能够在鲁迪“走出”那一步的同时第一次得到释放，能令人想起一期#25末尾的那段绝佳的演出。而本话结尾的另一种意义的走出也有着不错的演绎。打开窗户的鲁迪并没有直接走出房门，但片刻后映到窗户上的火光却呼应着鲁迪“不是什么都没改变”的台本。而后音乐响起，鲁迪落下的眼泪化为雨过天晴前的最后一滴雨水打落到黄金的麦穗上，画面一转回到洛琪希带鲁迪第一次走出家门的时候，与一期多处情绪渲染高潮时刻的交相呼应终于给了鲁迪，以及观众，再次走出那一步的勇气。</p><p>事实上“走出一步”这一点对无职转生来说可谓是相当重要的一个主题，无论是原著小说还是动画都是如此。或者说，“走出一步（一歩を踏み出す）”实质上也正是“认真地活下去（本気だす）”的最具象且直观的表现。对于原著而言，多个重要篇章的结尾都以后者作结，而前者自然而然地成为了动画这一形式体裁的母题。一期中“走出一步”更加隐晦，从鲁迪被洛克希放上马踏出家门到转移时间后与瑞杰路德结伴踏上回家的路再到最后一集#25那有着强烈情感抒发的直白的一步，在这一过程中“走出一步”逐渐被观众所感知。另一方面一期Part.2的ed也从另一个方面点出了这一点：鲁迪开头只能透过窗户望着被他改变了的，“走出一步”的人们，而自己却仍在原地踏步。有这一点推进到鲁迪自身“走出一步”，从而呈现出的是鲁迪对魔大陆冒险经历中快乐的回忆切片。</p><p>窗户这一表现手法从某种意义上延续到了二期Part.1的op。三色鸟的隐喻太过明显故而略去不表，而被踏上路途的鲁迪在学院缓慢前行的过程中窗户与大理石地板映照出了被他改变的“走出一步”的人们。从这一点来看情感上本作也很好地延续了一期从一始终的力量。</p><h1 id="「BanG-Dream-It’s-MyGO-」-7-「今日のライブが終わっても」"><a href="#「BanG-Dream-It’s-MyGO-」-7-「今日のライブが終わっても」" class="headerlink" title="「BanG Dream! It’s MyGO!!!!!」 #7 「今日のライブが終わっても」"></a>「BanG Dream! It’s MyGO!!!!!」 #7 「今日のライブが終わっても」</h1><blockquote><p>播出时间：2023.07.27</p></blockquote><p>继#3后的又一神回，live中的两首歌被与叙事完美的结合。开场后固定镜头与几个单调客观的机位，环境声中微弱却存在着的时钟声，刻意被设置在后景又不被摄影机完全容纳的人物述说着氛围的压抑。而这种压抑也一直被延续到live的第一首歌开头：因多次失误而时暗时亮的灯光，故意设置的混音使得燈的声音即使卖力地呼喊也难以被清晰辨识。渲染情绪的同时又不忘进一步地从空间关系上刻画人物：走向一角的燈自然地避开了观众的视线，游离在外的野良猫，分局的角色们，等等。</p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-1.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-2.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-3.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-4.png" alt="picture"></p><p>直到灯的独白压抑感才被一扫而空，间奏逐渐转化为春日影的前奏，灯光逐渐明亮，照亮了原本昏暗的舞台，照亮了从昏暗后台中走出的他们。不难注意到这两首歌实质上也与人物的情感转变有这相当程度的一致性。在此之上，そよ的情感刻画也借着人物的动作调度与镜头对人物的容纳能力一同被暗示。这种对画面与脚本的掌控能力实在太精彩。</p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-5.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-7.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/picture-6.png" alt="picture"></p><h1 id="「BanG-Dream-It’s-MyGO-」-10-「ずっと迷子」"><a href="#「BanG-Dream-It’s-MyGO-」-10-「ずっと迷子」" class="headerlink" title="「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」"></a>「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」</h1><blockquote><p>播出时间：2023.08.17</p></blockquote><p>动画标题名 &amp; 乐队名 まいご的双关意义第一次被直接点出，在经历#9的所谓「解散」之后困于过去的四个人的迷子（まいご）形象愈发明显，而使得乐队五人再次重组的契机则是彷徨着的灯终于想要迈出一步。重聚的过程随着角色加入的倒序而推进，其中与开头几话的对仗呼应也是相当明显。乐器的逐步加入，五个人重聚于舞台上时詩（うた）终于变成了歌（うた），以这种相当激进的方式来将看似无法解决的问题进行推进也与这部充斥着重女的动画有一种情感意味上的合理性。</p><h1 id="「無職転生Ⅱ-～異世界行ったら本気だす～」-7-「獣族令嬢拉致監禁事件」"><a href="#「無職転生Ⅱ-～異世界行ったら本気だす～」-7-「獣族令嬢拉致監禁事件」" class="headerlink" title="「無職転生Ⅱ ～異世界行ったら本気だす～」 #7 「獣族令嬢拉致監禁事件」"></a>「無職転生Ⅱ ～異世界行ったら本気だす～」 #7 「獣族令嬢拉致監禁事件」</h1><blockquote><p>播出时间：2023.08.20</p></blockquote><p>无职二期回光返照的一集，从开头开始就能最直观的从作画意味上直接体会到：细微的小动作不断，特效作画更加灵动切实地还原流体为例的各种现象、甚至是背动中的喷泉也倾注了心思。鲁迪发怒一段的前后景无论从调度还是作画层面上都展现了其水准，而节奏本身的把控也相当自然。尽管和一期相比本集可能也只是垫底水平（就看开头希露菲形成的水球与一期前几集洛克希&#x2F;鲁迪形成的水球就能看出，线条密集度、动态等等都完全不在一个档次），但放在二期却十分弥足珍贵。</p><h1 id="「英雄教室」-10-「俺よりうまいものに逢いに行く」"><a href="#「英雄教室」-10-「俺よりうまいものに逢いに行く」" class="headerlink" title="「英雄教室」 #10 「俺よりうまいものに逢いに行く」"></a>「英雄教室」 #10 「俺よりうまいものに逢いに行く」</h1><blockquote><p>播出时间：2023.09.10</p></blockquote><p>应该说虽然最初看这片就能知道这是一个很经典的低预算厕纸轻改动画片，而前两集看下来也只是给本片多加了后宫龙傲天卖肉几个tag，然而本片从中期开始借助着优秀的演出使得观感有了相当多的提升。无论是对各类动画分镜的neta（逆A，EVA，明日之丈等等），都在搏得观众会心一笑的同时完成了演出最根本的目的：即提升本片在观看过程中的趣味性。应该说无论是带或带脑子来看本片，都能收获到不小的乐趣，这在本季动画普遍质量低迷的大背景下使本片能提供了每周最为轻松愉快的一段观影体验。</p><p>本集亦是如此，在上上集暗指SAC，上集以EVA逆A巨人哥斯拉的neta贯穿整集之后，本集大量致敬出崎统最为经典的harmony与三回PAN，特别是放眼动画史中也相当经典的「明日之丈」中燃尽的场景。在给观众提供欢乐的同时也让前数集勇者为大家带去的帮助汇聚为大家对勇者的心意，从而完成了末尾的一个小小的情绪爆发点。这样淳朴的欢乐与感动实在是太弥足珍贵了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/09/28/SeasonBest-202307-20230703/cover-picture.JPG&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="动画季度总结" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%8A%A8%E7%94%BB%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>大量私货的10年代十佳游戏</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/</id>
    <published>2023-08-10T05:57:07.000Z</published>
    <updated>2024-07-23T13:47:53.450Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/cover-picture.JPG" alt="Cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.08.10</p></blockquote><p>虽然已经是10年代结束后的第四个年头了，不过个人还是想从这个时间节点回顾一下这十年的游戏。当然，笔者的口味比较类似于日系玩家，因而欧美系游戏一方面玩得少，另一方面也都不是很喜欢。</p><p>同样的按照时间顺序简单辣评：</p><h1 id="「ポケットモンスター-ブラック-ホワイト-ブラック-2-ホワイト-2」"><a href="#「ポケットモンスター-ブラック-ホワイト-ブラック-2-ホワイト-2」" class="headerlink" title="「ポケットモンスター ブラック &amp; ホワイト &amp; ブラック 2 &amp; ホワイト 2」"></a>「ポケットモンスター ブラック &amp; ホワイト &amp; ブラック 2 &amp; ホワイト 2」</h1><blockquote><p>中文名：宝可梦 黑白 &amp; 黑2白2 <br>发售时间：2010.9.18 &amp; 2012.06.23</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-6.JPG" alt="Picture"></p><p>ds与2d像素宝可梦最终作，也无疑是至今八代最佳的一代。没落的传说与宝可梦的解放，同根相生而显然对立的神兽，开篇等离子队关于宝可梦的一席发言贯穿一周目始终，即便是如今看来也是极其超前而跳脱宝可梦系列的。对双屏的运用也相当出色。此外两个版本的差异也是相当之多，足见GF的诚意。</p><p>另一方面，资料片黑2白2在整个系列中也独树一帜，或许被看作是正统续作也不为过。延续正传的剧情，两年后超绝可爱的鸣依踏上旅途。剧情上延续前作的出彩但却并未有进一步的探讨，但对资料片来说已足够。玩法地图大改，处处都能见到两年前主角的影子。然而最令人涕泪的无疑是二周目踏入前作主角家中的那一瞬。</p><h1 id="「NEWラブプラス-」"><a href="#「NEWラブプラス-」" class="headerlink" title="「NEWラブプラス+」"></a>「NEWラブプラス+」</h1><blockquote><p>中文名：New 爱相随 + <br>发售时间：2014.03.27</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-9.jpg" alt="Picture"></p><p>爱相随系列的最后一作，无敌的LVG类游戏。首作刚发售时引起了空前热潮，攻略成功后的模式令人十分惊艳且足以让人沉迷其中。</p><h1 id="「Bloodborne」"><a href="#「Bloodborne」" class="headerlink" title="「Bloodborne」"></a>「Bloodborne」</h1><blockquote><p>中文名：血源诅咒 <br>发售时间：2015.03.25</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-5.jpg" alt="Picture"></p><p>PS独占魂类游戏，宫崎英高对背景与氛围，以及其与游戏本身的一切的把控达到了相当的高度。魂类高难度带来的正向反馈更需多提。</p><h1 id="「ゼノブレイドX」"><a href="#「ゼノブレイドX」" class="headerlink" title="「ゼノブレイドX」"></a>「ゼノブレイドX」</h1><blockquote><p>中文名：异度之刃X <br>发售时间：2015.04.29</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-2.jpg" alt="Picture"></p><p>异度之刃系列的第二作，不过并不是正传而是类似于旁支的作品。缺点很多：主线内容太少，故事没讲完挖坑一堆；难度曲线很不合理，刷刷刷元素实在太多，不联网体验会少掉许多，战斗系统有趣但也有缺陷，日本贝多芬ky的不行，但单就一个优点就足以让我给本作打满分：自由驾驶机器人探索无缝超大地图。兼顾了肉身和机甲做出了仅此一作的巨大机器人体验，放眼jrpg恐怕也只此一家。当做出机器人以及让机器人翱翔天空的那刻，一切都值得了。</p><h1 id="「SeaBed」"><a href="#「SeaBed」" class="headerlink" title="「SeaBed」"></a>「SeaBed」</h1><blockquote><p>中文名：海床 <br>发售时间：2016.01.25</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-8.jpg" alt="Picture"></p><p>全年龄小成本同人AVG，但凭借出色的文笔与叙事令人印象深刻。学会说再见需要多久？追寻过去时光的切片一如在黑暗的海床漫步，时间的流逝之间真实也呼之而出。直到最后歇斯底里的情绪也仅能隐于平淡的文字之后，为人所见的只有零散记忆化成的气泡。</p><h1 id="「ゼルダの伝説-ブレス-オブ-ザ-ワイルド」"><a href="#「ゼルダの伝説-ブレス-オブ-ザ-ワイルド」" class="headerlink" title="「ゼルダの伝説 ブレス オブ ザ ワイルド」"></a>「ゼルダの伝説 ブレス オブ ザ ワイルド」</h1><blockquote><p>中文名：塞尔达传说 旷野之息 <br>发售时间：2017.03.03</p></blockquote><p>WiiU平台的收尾与NS平台的首发，可以说拯救了任天堂败局的游戏。游戏本身的素质无须多言。而同样是10年代重制发售的「时之笛」与「姆吉拉的假面」也几乎能作为本榜单的守门员了。</p><p>从游玩本作的续作「王国之泪」的角度来看，正好之前看到篇采访说是野炊模式可能会延续到后续的塞尔达上，想了想其实是很合系列逻辑的。</p><p>塞尔达系列可以说是三大高峰的作品：众神的三角力量、时之笛、旷野之息。2D、3D和开放世界类型的三大顶峰，可以说在其之后的主要类似类型的作品都延续了这三作的玩法，而一脉相承的不变点则是极高的自由度。从三角力量内的两幅大地图上自由选择顺序进行攻略，到时之笛作为几个大神殿接续点的村子外大地图，再说到野炊作为开放世界而言无缝大地图，这一高度自由性的体现是相当明显的，也只有天剑相对更线性一些。王国之泪之于野炊，可能比较类似于假面和黄昏公主之于时之笛：在玩法上高度继承的基础上完成对前者基础玩法的进一步打磨，同时进一步添加更多的玩法。假面更多体现在独特的时间系统，而黄昏公主则是同时将剧情塑造和神殿解密都做出了进一步的优化；类似的王国之泪讲攀登和降落这两点着重进行了优化，并加入了最具代表性的开放世界重交互下的相对的自由建造。而这些改进对玩法带来的改变则无疑是巨大的。假面的时间系统带来的难度上的极大提升使得其成为系列难度之最，三天时间的限制某种意义上也如时之笛中时之神殿带来的七年时光间的流转，而这一点在黄昏公主中体现为光暗世界人狼形态的转变。类似的，王国之泪的几个新技能，尤其是究极手通天术倒转乾坤这三者，互相结合之下确实是出现了发售前难以想象的多种玩法。我个人而言还是挺满意的。</p><p>当然，这种所谓的升级改进plus版本在不同玩家间的接受程度也确实是不同的。就像有些玩家在玩过时之笛后就不再能为假面黄昏公主等给出超高评价，玩过野炊的玩家再去玩王国之泪也难以体会到最初接触到野炊时的惊艳感。不过说来从野吹三千万到如今王国之泪三天一千万，速度直追隔壁朱紫的三天一千万记录，真是难以想象。</p><h1 id="「ゼノブレイド2」"><a href="#「ゼノブレイド2」" class="headerlink" title="「ゼノブレイド2」"></a>「ゼノブレイド2」</h1><blockquote><p>中文名：异度之刃2 <br>发售时间：2017.12.01</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-1.png" alt="Picture"></p><p>异度之刃系列的第三作，非常简单且传统的jrpg展开：王道热血的Boy meets girl。然而这种展开却能借着优秀的人物塑造与演出调动起玩家的情感，从遇到ホムラ后她第一次被劫，到两人真情慢慢流露，ホムラ显露出ヒカリ的真身再到最后合为一体，几乎每一个情节点玩家都能与游戏中人物产生共鸣。系统而言挂球与四连击系统也有这充分的乐趣与深度，系列一脉相承的大地图也无可挑剔。唯一的缺点可能就是地图引导实在太逆天。</p><h1 id="「ランス10」"><a href="#「ランス10」" class="headerlink" title="「ランス10」"></a>「ランス10」</h1><blockquote><p>中文名：兰斯10 <br>发售时间：2018.02.23</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-4.jpg" alt="Picture"></p><p>我个人排前十时十分纠结的一部，系列14部作品构建的恢弘史诗的收尾之作。实际上10年代的几部兰斯：R01、R03、R8、R9都已经有着相当的素质了。</p><p>整个系列而言在游戏性上大胆而丰富，创造了相当多有趣的系统：R01的筹码对战与R01、R03的翻牌迷宫，R5的随机战斗与行动系统，R6超前而大胆的第一视角3D，R7传承自鬼兰的地域压制SLG &amp; RPG以及其与剧情路线结合的紧密与丰富程度，R8的任务导向系统，R9的战旗，以及R10的打牌。同时系列中剧情本身就已经足够恢弘了：R03第一次升级游戏的叙事从小地图的嬉笑怒骂转向大地图多方势力冲突的大破大立，R02、R4、R5、R7、R8一步步构建着宏大讽刺且新颖的世界观，R03、R6、R9、R10则专注于人物的塑造。十几部作品下来上百位角色都能在R10里有着被玩家记住的各自的弧光。各种意义上来看，都可以说本作也是毫无缺点的游戏了。</p><h1 id="「KINGDOM-HEARTS-III」"><a href="#「KINGDOM-HEARTS-III」" class="headerlink" title="「KINGDOM HEARTS III」"></a>「KINGDOM HEARTS III」</h1><blockquote><p>中文名：王国之心3 <br>发售时间：2019.01.25</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-3.JPG" alt="Picture"></p><p>系列本身是仅次于DQ与FF的第三大jrpg系列，无论在欧美还是日本都有着相当的受众。本作作为ソラ最初的三部曲的完结之作，可以说是系列前两部正作与其他十部左右的旁支作的集大成者：bbs和0.2的风格系统变成了键刃变形，ddd的突进爬墙，2代的联携，358&#x2F;2的危机变身，记忆之链的卡牌指令的影子也在其中。相当丰富有趣，但是难度是否有点降低了。另一方面，收尾也算收的相当不错，几个三人组的回归，光头的释然，ナミネ的复活…键刃墓场那里估计也是直接调的手游玩家。夕阳下大家的身影，索拉的轮廓却逐渐模糊消失…而dlc中夜空的回归也化解了无数FF玩家的遗憾。</p><h1 id="「大乱闘スマッシュブラザーズ-SPECIAL」"><a href="#「大乱闘スマッシュブラザーズ-SPECIAL」" class="headerlink" title="「大乱闘スマッシュブラザーズ SPECIAL」"></a>「大乱闘スマッシュブラザーズ SPECIAL」</h1><blockquote><p>中文名：任天堂明星大乱斗 特别篇 <br>发售时间：2019.12.07</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/picture-7.jpeg" alt="Picture"></p><p>在FTG中相当特别的作品，作为NS平台上的首作，樱井对岩田的承诺之作同时也可能是最后一作。相当低的入门门槛与相当有深度的击飞系统使得各种层次的玩家都可以找到自己的乐趣，而游戏系列本身作为游戏博物馆而言也更不用再加称赞。两个DLC季票添加了更多或惊喜或期待已久或相当意外的角色，都各自有着相当有趣的专属系统，而最后加入的ソラ本身大概也寄予着樱井本人的情感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/08/10/10TenBestGames-20230810/cover-picture.JPG&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="年选" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%B9%B4%E9%80%89/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="游戏" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>随记：近日玩具购入 癸卯年己未月乙未日</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/</id>
    <published>2023-08-05T06:31:38.000Z</published>
    <updated>2024-07-23T13:47:54.078Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/cover-picture.jpeg" alt="picture"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.08.05</p></blockquote><p>癸卯年己未月乙未日，申城。</p><p>GSC 尼娅 &amp; 光、焰 amiibo 新到货，与GSC 光、焰一同拍摄。</p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-4.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-6.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-7.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-1.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-8.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-5.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-3.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/picture-2.jpeg" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/08/05/Notes-20230805/cover-picture.jpeg&quot; alt=&quot;picture&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2023.0</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="アルバム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0/"/>
    
    <category term="ゲーム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
    <category term="玩具" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%8E%A9%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>季度印象最深刻单集 2023.04</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/</id>
    <published>2023-07-02T05:53:26.000Z</published>
    <updated>2024-07-23T13:47:54.442Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/cover-picture.jpg" alt="cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.07.02</p></blockquote><h1 id="「【推しの子】」-1-「Mother-and-Children」"><a href="#「【推しの子】」-1-「Mother-and-Children」" class="headerlink" title="「【推しの子】」 #1 「Mother and Children」"></a>「【推しの子】」 #1 「Mother and Children」</h1><blockquote><p>播出时间：2023.04.12<br>先行上映时间：2023.03.17</p></blockquote><p>本动画开播前就已备受瞩目，而本集作为TV动画的首集在影院先行上映的情况也不少见。少见的则是动画工房给了本集太多的资源。在复杂的人设下又堆了极大量的修正，在保证较高规格水平的前提下硬是堆出了一部剧场版的长度。这一点上就足以见到诚意。不过也大抵只有如此了。如果本文标题是“个人最佳”而非“印象最深刻”的话，这一集大概也不会出现。</p><h1 id="「ひろがるスカイ-プリキュア」-13-「届けて！はじめてのおくりもの」"><a href="#「ひろがるスカイ-プリキュア」-13-「届けて！はじめてのおくりもの」" class="headerlink" title="「ひろがるスカイ!プリキュア」 #13 「届けて！はじめてのおくりもの」"></a>「ひろがるスカイ!プリキュア」 #13 「届けて！はじめてのおくりもの」</h1><blockquote><p>播出时间：2023.04.30</p></blockquote><p>值得在系列历史中留下一笔的一话。应该是系列第一次变身不打怪，且全程敌人未出现的一话（愈q#26总集篇；热q#33小剧场虽然也不注重打怪，但还是让变身打怪来方便卖玩具了）。肉身打架的q娃不仅仅只是20年前宣扬的女性独立战斗的代表，而更重要的是帮助他人的心情。本话用帮助离别者的明线暗点主角间未知的分离算是点找的挺好的一个地方，另一方面新篇章的推进也不再是遗忘的拿到新玩具来推动展开。不过笔力实在是一般。</p><p>另外一提本集片尾报幕是最喜欢的キュアミラクル。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-1.jpg" alt="picture"></p><p>法q#48的分离连接到了#49的再会，而#49的重逢又指向了#50的未来，单这两集半多就将前中期的甜水百合拉高了不少，实在是难以忘记的神回。不知道明年的二期会延续出怎样的故事。</p><h1 id="「アイドルマスター-シンデレラガールズ-U149」-4-「羽が折れているのに飛んでいくもの、なに？」"><a href="#「アイドルマスター-シンデレラガールズ-U149」-4-「羽が折れているのに飛んでいくもの、なに？」" class="headerlink" title="「アイドルマスター シンデレラガールズ U149」 #4 「羽が折れているのに飛んでいくもの、なに？」"></a>「アイドルマスター シンデレラガールズ U149」 #4 「羽が折れているのに飛んでいくもの、なに？」</h1><blockquote><p>播出时间：2023.04.26</p></blockquote><p>U149，很容易发现其与765本家动画的相似之处。#4为桃华回，从一开始桃华与爱丽丝的明暗双线便已经确立，无论是隔桌形成的显著对比又或是小物服饰上的巨大差异都在强着这样的一种对立。情节推进场景转移的过程中，这种对立不断地被蹦极这一阻碍消解着：当桃华第一次站到蹦极高处的边缘，当p体验过蹦极后来安慰桃华，等等。而当桃华背身向后落去的同时，前述的这种对立被彻底消解了。也由此，爱丽丝才能与她坐在同一张长椅上，笑谈渴饮“普通的”矿泉水。「羽が折れているのに飛んでいくもの、なに？」标题的谜底也在桃华纵身一跃的同时呼之欲出。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-3.jpg" alt="picture"></p><p>桃华蹦极那段的作画也非常厉害，看过就能最直观地感受到，整集前段略显压抑的情绪也在那一段得到了最大的释放。</p><h1 id="「機動戦士ガンダム-水星の魔女-Season2」-17-「大切なもの」"><a href="#「機動戦士ガンダム-水星の魔女-Season2」-17-「大切なもの」" class="headerlink" title="「機動戦士ガンダム 水星の魔女 Season2」 #17 「大切なもの」"></a>「機動戦士ガンダム 水星の魔女 Season2」 #17 「大切なもの」</h1><blockquote><p>播出时间：2023.05.07</p></blockquote><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-10.jpeg" alt="picture"></p><p>敢达水星魔女，グエル也即挑染这个角色确实是刻画的挺好的。从一期#1开始一直到如今的二期#17，尽管只是寥寥几笔，却有着充足的成长性。一期#12的父子戏、二期#15给出的地球上实战规格机战都利用比较传统的机战战争戏来给这个角色刺激，这一点在水星魔女这个聚焦于校园不死人敢达决斗的青春校园片里实在是难能可贵，换句话说实在是难得的敢达味（二期#15标题「父と子」，对应的Z敢达#5标题「父と子）。而这一真实性也直接延续到了二期#17的敢达决斗，几个舱内的镜头算是给了不错的交代。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-2.jpeg" alt="picture"></p><blockquote><p>图源（按序）：twi<a href="https://twitter.com/AkimatutiX">@AkimatutiX</a>，二期#15エンディングイラスト</p></blockquote><h1 id="「天国大魔境」-10-「壁の町」"><a href="#「天国大魔境」-10-「壁の町」" class="headerlink" title="「天国大魔境」 #10 「壁の町」"></a>「天国大魔境」 #10 「壁の町」</h1><blockquote><p>播出时间：2023.06.03</p></blockquote><p>五十嵐海回，非常异质、个人风格非常明显的一回。作画与节奏上的异质化最能直观地感受到，故而不再赘述。多处漫符化的演绎在暗藏的压抑氛围下显得突兀与珍贵，反而加强了前段的违和感。说来五十嵐近几年的风格倒是都挺高度突出的：「Cyberpunk: Edgerunners」 #6，「SSSS.DYNAZENON」 #10，等等。不过整体来看本集风格的整体性一般，很难说算得上很好。</p><h1 id="「アイドルマスター-シンデレラガールズ-U149」-11-「-大人と子供の違いって、なに？」"><a href="#「アイドルマスター-シンデレラガールズ-U149」-11-「-大人と子供の違いって、なに？」" class="headerlink" title="「アイドルマスター シンデレラガールズ U149」 #11 「 大人と子供の違いって、なに？」"></a>「アイドルマスター シンデレラガールズ U149」 #11 「 大人と子供の違いって、なに？」</h1><blockquote><p>播出时间：2023.06.21</p></blockquote><p>小林自述“用尽全力”的一集。</p><p>大人与小孩的内核早在#1就已埋下。12岁想要成为偶像的小女孩们，以及在本片视角下替代他们缺位的家长的作为大人的p。标题的谜题也埋在了这两者相处至今的全部10话之中。小女孩们当中充当大人角色的爱丽丝，从第一话开始就以“孩子气”为理由，请求着p称呼自己的姓氏的同时走下台阶，在之后的出场时间内也几乎都装作大人模样考虑着企划中现实的种种因素。而在大人们当中的p却是这一团体中十足的小孩，无数次被前辈与上司要求成熟一下，固执地相信小孩们认真的梦想，冒失地融入到U149这个团体中。这两人的对比也从第一话的两次叠化转场就被直接抛出。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-6.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-4.png" alt="picture"></p><p>作为爱丽丝个人回的本集，从#1的爱丽丝视角继续延伸。身为小孩的他们，与被迫成长为大人的十六七岁的少年少女们并不相同。正相反，他们憧憬着大人，在游戏与幻想中充满热情与梦想地扮演着大人的角色，一如灰姑娘用魔法换上华丽的服装与水晶鞋一般。梦境中指向12点的闹钟，即是灰姑娘失去魔力的时刻，又是处于12岁的他们一步步走向20岁的开始。而爱丽丝的魔力，却早在12点以前就已经消失了。自己做饭、自己通勤，自己工作，甚至不再相信梦想，俨然一副大人模样。也由此像“小孩”一样相信梦想的p才能给因漫步雨中城市而迟到——失去水晶鞋——的爱丽丝，再一次延续12点前的魔法的机会。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-5.png" alt="picture"></p><p>至于其他的那些，无论是爱丽丝于#1与本集的梦境，又或是两集内多个场景的对比对仗，甚至于是本集中团体名玩笑般的含义被公布时小女孩们的喜悦与担忧的反应，都能相当明显地看出其中对本集母题的直指。这样刻意甚至是有些过度点题的演出可能也是本集最大的缺点，不如本家春香千早回那样一气呵成润物无声。不过想来U149仅12集的篇幅大概才是最大的问题。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-7.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-8.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/picture-9.png" alt="picture"></p><p>个人而言倒是更喜欢几处有关鞋子的演出。#1和本集多次出现的作为女孩的爱丽丝的乐福鞋、ed中作为灰姑娘女孩的他们穿上的水晶鞋、本集爱丽丝回忆中妈妈的高跟鞋，等等。这些不同的鞋也正是小孩与大人，灰姑娘与由魔法变身的公主，学生与偶像的分界点。同样的他们也在穿上这些鞋的同时变成了不同的自己。</p><h1 id="「アイカツ！-10th-STORY-～未来へのSTARWAY～」"><a href="#「アイカツ！-10th-STORY-～未来へのSTARWAY～」" class="headerlink" title="「アイカツ！ 10th STORY ～未来へのSTARWAY～」"></a>「アイカツ！ 10th STORY ～未来へのSTARWAY～」</h1><blockquote><p>上映时间：2023.01.20</p></blockquote><p>虽然不是本季度的，也不是TV动画，不过由于是6月出的源感触也很多姑且在这里提一下。</p><p>在自己也将毕业的这个时点看感触还真是微妙。毕业并不是什么了不得的大事，要缅怀的青春也早已在不经意间流去，离别之后的未来也绝不是什么星星闪闪的道路。相比于EVA那充满说教意味的圆满到不能再圆满的补完，我倒是更被她们用片刻青春编织出的无限延伸到未来的梦打动。就算被迫地走向再平凡普通的未来也不要紧，那是曾经闪耀的我们，以及你们，可以无数次重新开始的STARWAY。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/aikatsu-1-20230621.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/aikatsu-2-20230621.png" alt="picture"></p><p>さようなら、全てのアイカツ。</p><p><img src="/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/aikatsu-3-20230621.png" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/07/02/SeasonBest-202304-20230612/cover-picture.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="动画季度总结" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%8A%A8%E7%94%BB%E5%AD%A3%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>宝可梦晶灿钻石／明亮珍珠与宝可梦Home联动相关</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/24/PokemonBDSP-20230624/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/24/PokemonBDSP-20230624/</id>
    <published>2023-06-24T06:27:41.000Z</published>
    <updated>2024-07-23T13:47:54.438Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于个人博客<br>发表日期：2023.06.24</p></blockquote><h1 id="bdsp传输限制"><a href="#bdsp传输限制" class="headerlink" title="bdsp传输限制"></a>bdsp传输限制</h1><p>由于晶灿钻石／明亮珍珠（下称bdsp）1.1版本的复制bug，在之后ILCA开放与Home联动时对特定宝可梦的传输做出了一定的限制。</p><p>对于此，<a href="https://wiki.52poke.com/wiki/Pok%C3%A9mon_HOME">神奇宝贝</a>百科上的记述如下：</p><blockquote><p>在正常游戏流程中仅可获得1只的宝可梦，从同一个游戏记录中最多仅可寄放1只到Pokémon HOME。例如，从《晶灿钻石／明亮珍珠》将帝牙卢卡寄放到Pokémon HOME后，无法再次从该游戏记录将帝牙卢卡寄放到同一个Pokémon HOME账号。<br>部分通过游戏漏洞或修改获得的宝可梦无法寄放到Pokémon HOME。<br>因为程序漏洞问题，既不能寄放晃晃斑也不能将其领取到《晶灿钻石／明亮珍珠》；只有来自《晶灿钻石／明亮珍珠》的土居忍士可以领取到《晶灿钻石／明亮珍珠》。<br>不能领取超极巨化的皮卡丘、喵喵及伊布到《晶灿钻石／明亮珍珠》。</p></blockquote><p><a href="https://www.serebii.net/pokemonhome/transfer.shtml">时拉比</a>上的记述则是：</p><blockquote><p>Pokémon Brilliant Diamond &amp; Shining Pearl have an extra limitation where you can only put 1 of each species of Special Pokémon (Legendary, Mythical) into Pokémon HOME from each save file.<br>Blocked Pokémon:<br>Pikachu, Eevee and Meowth with the Gigantamax Factor can’t be placed in the game<br>Nincada can’t be placed in the game unless it came from Brilliant Diamond &amp; Shining Pearl<br>Spinda can’t be added in the game or removed from the game If a Pokémon gets Hyper Trained in Scarlet &amp; Violet and isn’t Level 100, it cannot be added back until it is Level 100</p></blockquote><p>当然，问题在于这两个相对权威的百科网站对实际上的传送规则并没有更详细的说明。故而，笔者为此做了一些测试。实际上来说，从bdsp向home端的传送对神幻兽的限制并不如百科上字面理解的那样严格。事实上，这一限制（即同种神幻兽只能从存档中向home转移一只）仅对来自bdsp同一版本（bd&#x2F;sp）的神幻兽起作用。另一方面，在遵循上述限制的前提下，同一个bdsp的存档可以向home传输的来源地标记为bdsp神奥地区的神幻兽宝可梦，其最多可以传输一只通常颜色的神幻兽宝可梦，以及一只异色（闪光）该种神幻兽宝可梦，即共计两只。从目前的表现反推，考虑是从Home的追踪码结合来源标记系统作出的限制。</p><p>下面以几个例子详述：</p><ol><li>假如有来自bdsp神奥地区（来源标记为下图）的帝牙卢卡A，以及来自其他地区（无来源标记的g3、g4、g5，或者不为先前提到的来源标记的地区，包含旧神奥）的帝牙卢卡B，那么帝牙卢卡A和B可以同时从bdsp取放到home。</li><li>假如有来自其他地区（来源标记不为下图）的帝牙卢卡A和帝牙卢卡B，那么帝牙卢卡A和B可以同时从bdsp取放到home。</li><li>假如有帝牙卢卡A和帝牙卢卡B，两者都有来源标记为下图，其中帝牙卢卡A出生于bd，帝牙卢卡B出生于sp，那么将帝牙卢卡A由bd经过home取放到sp后，帝牙卢卡A和帝牙卢卡B可以同时从bdsp取放到home。</li><li>假如有帝牙卢卡A和帝牙卢卡B，两者都有来源标记为下图，其中帝牙卢卡A出生于bd，帝牙卢卡B出生于sp，将帝牙卢卡B经过连接交换直接从sp传输到bd后（即未经过home），那么帝牙卢卡A和帝牙卢卡B至多只能有一只可以从bdsp取放到home。</li><li>同样的，假如有帝牙卢卡A和帝牙卢卡B，两者都有来源标记为下图且都出生于bd，那么帝牙卢卡A和帝牙卢卡B至多只能有一只可以同时从bdsp取放到home。</li></ol><p><img src="/pikapikapi-blog-hexo/2023/06/24/PokemonBDSP-20230624/Sinnoh_symbol.png" alt="symbol"></p><h1 id="规避传输限制的方法"><a href="#规避传输限制的方法" class="headerlink" title="规避传输限制的方法"></a>规避传输限制的方法</h1><p>当然，有限制就有解决方法。实质上来说，最关键的预防方式是尽可能不要将来源标记为下图的神幻兽放到同一个bdsp的游戏存档中。然而，假如已经不幸发生了这样的情况，解决方法也不是没有。</p><p>事实上，可以参考上述例子的第4条，可以考虑将多余的来源标记为下图的神幻兽通过连接交换（而非home），直接传输到一个新的游戏存档中，再利用home从这个新的存档中将这只神幻兽取出。尽管成本较高，但这也是目前唯一可以对这一类神幻兽存取的方法了。</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><img src="/pikapikapi-blog-hexo/2023/06/24/PokemonBDSP-20230624/picture-1.png" alt="legend &amp; maboroshi"></p><blockquote><p>神奇宝贝百科罗列出的特殊的宝可梦。其中，“传说中的宝可梦”和“幻之宝可梦”两个类别的宝可梦都会受到bdsp的上述传输限制。这一限制也包括了可由宝可梦培育从蛋中孵化的霏欧纳</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2023.06.24&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;bdsp传输限制&quot;&gt;&lt;a href=&quot;#bdsp传输限制&quot; class=&quot;headerlink&quot; title=&quot;bdsp传输限制&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="游戏" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>记第25届上海国际电影节</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/</id>
    <published>2023-06-17T06:22:48.000Z</published>
    <updated>2024-07-23T13:47:54.850Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/cover-picture.jpg" alt="Cover"></p><blockquote><p>本文首发于个人博客 <br>发表日期：2023.06.17</p></blockquote><p>本届siff（上海国际电影节，后文均简称为siff）是因疫情停办一届siff后的首届siff，也是笔者本人参加的第五届siff，在此以观影后记为主简单记录一下。</p><h1 id="片单发布与抢票"><a href="#片单发布与抢票" class="headerlink" title="片单发布与抢票"></a>片单发布与抢票</h1><p>说来这一届时间安排和通知感觉排的比以往紧了不少。相较于往届通常在片单发布完成与正式抢票之间往往会间隔一周以上的时间，本次则是在5月31日晚完成片单的发布以后，仅仅在不足两天后的6月2日中午12点就开始了正式的抢票。另外一提抢票时间也从往届的周六早八点改到了周五的中午十二点。想来可能是由于24届siff时刚开票时出现的服务器网络问题导致。</p><p>本届siff完整的排片表可以参照<a href="https://www.siff.com/">上海电影节官网</a>，笔者也从官网下载了一份作为备份，可以从<a href='writings/siff-25-20230604.xlsx'>这里下载</a>。</p><p>个人来说其实对这届的片单不算满意。以教父、侯孝贤、戈达尔乃至EVA为代表的一系列电影实质上属于是siff常客了，年年都能看到。此外，感觉选片也有点太偏重大众口味了些。当然这可能也不算是一个缺点，毕竟大多数人被分流去抢了这些大热门，笔者想看的电影的抢票难度反而是降低了不少。</p><p>虽说如此，今年笔者也还是规划了挺多场要看的电影，基本保证从首天6月9日至最后一天6月18日每天都排了至少一场。抢票的时候尽量避开了周末的场次，因而抢票难度下降了不少。</p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-1.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-2.jpg" alt="picture"></p><p>其实在此之外也还有几场电影笔者也挺想看的，不过因为片单公布时间与开票时间的间隔较短些，最终也没来得及做好规划。</p><p>说回本次笔者在siff正式开始前的最终排片。首日9号的排片也不是很好，前几场时间间隔太紧了，赶路时间比较勉强的同时也带来了没有午饭时间这一问题。另外最大的问题还是最终的排片太过分散了，这也直接导致了很难在此之上再增加其他要看的场次。其实在此之外也确实有几场笔者挺想看的电影，不过因为片单公布时间与开票时间的间隔较短些，最终也没来得及做好规划。现有场次中最感到有压力的果然还是「菲律宾暴力史」吧，全长413分钟简直恐怖。事实上笔者也没在电影院（甚至可以把“在电影院”去掉）看过如此长的电影。其他倒都还好些。</p><h1 id="壹-首日-六月九日"><a href="#壹-首日-六月九日" class="headerlink" title="壹 首日 六月九日"></a>壹 首日 六月九日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-3.jpg" alt="picture"></p><p>首日排了四场电影，总计670分钟。虽然看似只排了四场电影，不过由于「乱世佳人」和「诸神的渴望」两部时间都比较长（影片本身也都安排了幕间休息），导致了最终四场电影的总时长在11小时以上。实际上尽管中间有一些时间的休息，但还是难免地感受到了疲劳。不过仔细一想毕竟是从早8:30的第一场一直看到了晚上11:30，这样的疲劳倒也挺合理的。此外在「乱世佳人」结束后尽管以最快速度赶往下一场，也仅仅只勉强在13:00刚开播的时候完成了「银河铁道999 剧场版」的入场，说实话实在是太赶了，之后应该尽量避免这种赶场情况。</p><p>首日的四场电影分布在三个电影院：天山电影院的体验确实是最好的。无论是氛围，还是观众的整体素质，当然也包括影厅本身的环境，都非常适合让观众在里面充分的享受电影；沪北电影院的体验明显的差。放映厅外就有卖各种食物的，致使在观影时全是吃食物的声音；大光明电影院的观影体验也是不错的。说实话大光明和天山剧院厅感觉确实是上海体验最好的几个影院之一了。巨大的容量、影院对观影观众的观影礼仪提醒、字幕副屏，等等，组合起来能够带来最良好的体验。</p><h2 id="「乱世佳人」"><a href="#「乱世佳人」" class="headerlink" title="「乱世佳人」"></a>「乱世佳人」</h2><p>首日看的第一场，影史经典「乱世佳人」。巧的是本场正好笔者的座位是一排一座。实话说本次在影院看最先也是最多注意到的其实是片中替代旁白成份出现的解释性文字。每当时空间大场景转换后，简单交代南北战争进展的解释性文字随着大全景或是空镜头浮现。虽然小说只看了中译没看原文，不过感觉上这些文字是直接照搬了原文。倒装反复对文的大量运用实在是太优美了，无论是音韵上的，还是形式上的，激起了笔者阅读一遍原文的冲动。</p><p>说回影片本身，于1939年在小说发生地亚特兰大首映的片长整整234分钟的电影，全片都大胆地采取了人工上色。单这几点就足以让其在影史上留下一笔。原作小说作为玛格丽特一生唯一的作品，其伟大已无须多言。而对电影而言，尽管有这整整234分钟的时长却仍难以像原作那样徐徐道来，恐怕也只能说是受限于年代与篇幅了。无论是多次采用的背光调度、还是色彩与演技对情感的双重暗示，都体现出了本片在那个剪辑手法还未快速进步年代下的精妙。最有幸的大概是得意在大荧幕下看到4K修复的费雯·丽本人，这位演出了美国“红楼梦”中的丽人的英国人。随着她说出原文的最后一句台词“After all, tomorrow is another day.”，电影也如原作那样完成了最圆满的收尾。</p><h2 id="「银河铁道999」-剧场版两部"><a href="#「银河铁道999」-剧场版两部" class="headerlink" title="「银河铁道999」 剧场版两部"></a>「银河铁道999」 剧场版两部</h2><p>大概是可以一起说说的两部，不过其实也没什么值得太多说的。浅显些的早已被片头片尾的几句旁白所揭露，往深里看也无非是在所谓的少年中寻找着多位扮演母亲的角色，一如隔壁的高达UC系列一般。</p><h2 id="「诸神的渴望」"><a href="#「诸神的渴望」" class="headerlink" title="「诸神的渴望」"></a>「诸神的渴望」</h2><p>本片倒是第一次观看。说实话在经历了三部电影后已经快累的不行了。电影本身是异常的厉害。全片可说是神话在现实中的再演，人们传颂、利用神话的同时，也在确实地书写神话本身。而在这书写的过程中，今村则将现代与传统的碰撞也融入其中，夹揉着其他的诸多元素。技工、龟太郎与其他村民多次转变的对比大概是最具有讽刺效果的。作为今村的的代表作之一，作为被称为论文式电影的作品，本片很大程度地展现了今村和恩师小津的最根本区别。不过从另一层面上来说，本片实在可看性太低，看一遍看不懂，更多的感想需要留待下次观看后再评说。</p><p>再说说一些片外体验。本场「诸神的渴望」的片源竟然是带内嵌英文字幕的，中文字幕也由英文字幕二次翻译而来，而非直译日文，也因而有一些因语言习惯导致的错译，这大概是本场最大的缺点。</p><h1 id="贰-六月十日"><a href="#贰-六月十日" class="headerlink" title="贰 六月十日"></a>贰 六月十日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-4.jpg" alt="picture"></p><p>本日只排了一场「猫王」，主要是为了在杜比厅爽爽才买的。看过之后还觉余味不足，因而晚上又买了场同样杜比厅的「变形金刚」随便看看。不过这倒也让笔者意识到，以后引进时做了3D转制处理的电影可以购买杜比厅的，这样可以享受原本的2D体验。</p><h2 id="「猫王」"><a href="#「猫王」" class="headerlink" title="「猫王」"></a>「猫王」</h2><p>纯菜。倒是不至于到烂片的程度，只能说平平无奇吧。从头至尾都能体会到巴兹那一管的俗到不行土得没边的低级审美，镜头就一直在那转啊切啊，音响就一直在那轰鸣。整体而言也太过流水账了，完全没展露出猫王对音乐界乃至当时美国环境的真正意义，更不用说片中无法避开却只一笔略去的马丁路德金与肯尼迪遇刺两件大事。这么一个缺乏高潮的流水账故事大概也只能借助花哨的剪切和不间断的音乐来引起观众的高潮。不过这种流水账倒确实是很客观的记录了猫王本人的事迹，而没有以带有某种观点的立场去评判他本人的是非功过，算是这么一部流水账电影的唯一优点吧。</p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-8.jpg" alt="picture"></p><p>不过不得不说的就是这么一部电影倒确实适合在大荧幕尤其是杜比影厅观看。轰鸣的音乐和花哨的画面在这样的影厅中最大化地发挥了作用。然而本场影片放映未结束时甚至是字幕表还未开始滚动时影院就已早早地亮起了灯，导致了笔者在电影节中所见过的最高的离场率，实在不能称得上是好的体验。</p><h1 id="叁-六月十一日"><a href="#叁-六月十一日" class="headerlink" title="叁 六月十一日"></a>叁 六月十一日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-5.jpg" alt="picture"></p><p>只排了一场「尖头的权太」，还是本届金爵奖动画单元参赛作品。本身期待并不高，只是没想到实在太难看。</p><h2 id="「尖头的权太」"><a href="#「尖头的权太」" class="headerlink" title="「尖头的权太」"></a>「尖头的权太」</h2><p>太烂，毫无特点。</p><p>影院体验一般，可能也有片子的问题，感觉椅子太硬角度太直，空调太热。</p><h1 id="肆-六月十二日"><a href="#肆-六月十二日" class="headerlink" title="肆 六月十二日"></a>肆 六月十二日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-6.jpg" alt="picture"></p><h2 id="「电影史」精选"><a href="#「电影史」精选" class="headerlink" title="「电影史」精选"></a>「电影史」精选</h2><p>每次看戈达尔都像在看论文，而这次在影院看「电影史」更感受到了读论文的痛苦。“电影史分为戈达尔前与戈达尔后。”戈达尔用电影、书籍与CD三种形式发布的这部「电影史」，从物理媒介上就最首先抛出了这一系列短片的一个最大议题。作为原片的「电影史」八个短片中，戈达尔分主题地对电影作了太多探讨。作家电影、电影与历史、电影作为历史的记录者与电影本身、电影作为语言、电影与认知。当戈达尔直白地抛出那些晦涩难懂的词藻时，观众才恍然大悟：观众自身正在观看的这部电影有了反身的属性，而反身延伸下去后，观众自身也成了被电影语言记录的历史。当他一如在当年「蔑视」首位将镜头朝向与背向观众那样再次将摄影机面向观众与摄像机本身，戈达尔的论点得到了最有力的证明。</p><p>可惜的是，Siff的这所谓精选集将原本主题明显的几个短片全部杂糅到一起，反而令观众更加不知所措。同时，字幕也一如本片常见的字幕源一般略去大量的对白。想来在siff上初看本片的观众会更不知所措吧。</p><h1 id="伍-六月十三日"><a href="#伍-六月十三日" class="headerlink" title="伍 六月十三日"></a>伍 六月十三日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-7.jpg" alt="picture"></p><p>原本本日只排了一场「巴黎一妇人」，但正巧上午有事，故临时又买了一场「Eureka」。</p><p>本日倒是笔者第一次在和平影都观影。无论是哪方面的体验都相当好。不过影厅的影厅分布在不同的楼层上，取票后的路程与等待时间可能就较长了。</p><h2 id="「人造天堂」"><a href="#「人造天堂」" class="headerlink" title="「人造天堂」"></a>「人造天堂」</h2><p>多说青山真治在本片中的手法太像安哲罗普洛斯，实则是中后段公路上的大量中远景大远景的长镜头摇镜头有些安哲的味道。然而本片前段交代劫持事件以及泽井与兄妹日常生活的片段这一手法并不多见，相较之下更有看点的则是固定镜头下前中后景人物的交互。当中后段巴士驶向大海，大远景的长镜头摇镜才成了主角。</p><p>全片着实是压抑的。前段的固定镜头与正反打几乎都快成了长镜头，中后段的大远景摇镜更不必多说。而全片大量的空镜头、不对称的构图、极少的对白、沉默的主角们，以及最显眼的单色滤镜都让压迫感从巨大的荧幕直逼观众。然而事实上，演员们的演绎化作了弥补了语言的缺位。三次的敲击声化作了角色间最直接的沟通，推动着巴士的前行与角色情感的转化。在小梢将海边拾起的贝壳掷向远方，呼喊着父母亲友甚至是影片开头劫持事件的犯人，昏黄的滤镜才终于被撤离。观众们这才发现，被碧绿环绕的巴士竟带着海洋的蓝色，而先前压抑含蓄的情感终于在沉默中爆发。</p><h2 id="「巴黎一妇人」"><a href="#「巴黎一妇人」" class="headerlink" title="「巴黎一妇人」"></a>「巴黎一妇人」</h2><p>被卓别林自认是自己最重要的影片之一，由他本人编导却未出演的严肃剧情片。这么一串描述就足以体现本片的特殊性。尽管这样的剧本在如今已变得庸俗到论谁都能一眼看到结局，然而在那个用手摇摄影机拍摄以每秒16格放映的映像的时代却并不如此。几组互成对比的镜头相当有意思，特别是最后驶向对方的马车与汽车更使得全片余味无穷。</p><h1 id="陸-六月十四日"><a href="#陸-六月十四日" class="headerlink" title="陸 六月十四日"></a>陸 六月十四日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-9.jpg" alt="picture"></p><p>siff往年也基本一直有将「EVA」系列搬上中国内地的荧幕。笔者也是在过去的几届siff内，得以将两部旧剧场版与三部新剧场版都在影院中观看到。而如今，终于得以在影院内观看这部最后的「福音战士」。</p><h2 id="「新・福音战士剧场版：终」"><a href="#「新・福音战士剧场版：终」" class="headerlink" title="「新・福音战士剧场版：终」"></a>「新・福音战士剧场版：终」</h2><p>说起来19年7月6日那天，正式公布了「终」的开头十分钟影像。当时笔者也从友人那拿到了上海场特别活动的入场券，在初号机立像那边现场看的这开头的十分钟映像。然而原定20年上映的最终章却一拖再拖，一直到了21年3月才正式上映。这期间只有海报不断的变更，PV和设定图偶尔被放出。</p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-1.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-2.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-3.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-4.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-5.png" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/poster-6.png" alt="picture"></p><blockquote><p>「EVA 终」海报变动，从上至下依次为：<br>宣布20年上映的初期海报、0706特别活动海报、宣布延期至21年上映的海报、正式海波、正式上映时的追加海报、最终版本海报</p></blockquote><p>21年3月终于上映时，却由于各种原因无法前往日本观看，一直等到后来Amazon Prime配信后才得以见证这个系列的最终章。当然，日本上映特典的小册子也无从获取，后来还是认识的人多次观看领取后从日本寄来的。</p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-1.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-2.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-3.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-4.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-5.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-6.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-7.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-8.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-9.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-10.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-11.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-12.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-13.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-14.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-15.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-16.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-17.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/booklet-18.jpg" alt="picture"></p><blockquote><p>日本本土「EVA 终」上映时的来场者特典小册子</p></blockquote><p>「EVA」的影响力无法估量，无论是二十多年前「死与新生」和「真心为你」上映时，又或是后来新剧场版「终」上映时，都引起了巨大的冲动。</p><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/newtype-1.jpg" alt="picture"></p><p>无论是TV版结局众人鼓掌，说着“おめでとう”，还是「真心为你」结尾海滩旁明日香说出“気持ち悪い”，都直击那一批观众迷茫的内心。二十多年后庵野早已和解，这才让几位维持着少男少女模样的主角在自己偏爱的特摄布景中完成了最终的、形式上的补完，而真正的补完——无论是对观众、对庵野甚至是对角色本身——他们的补完早已完成了。这155分钟恐怕只是庵野想借真嗣之口说出那句“さようなら、全てのエヴァンゲリオン”吧！从这层意义上来看，这部电影确实地只是作为一个见证，因观众需要这样的一个见证，而这份见证也需要由庵野、由观众来完成。</p><blockquote><p>很喜欢明日香的那几句：<br>“あの頃はシンジのこと、好きだったんだと思う。でも、私が先に大人になっちゃった。”</p></blockquote><p>见证着「EVA」终点的观众，在本场结束时也用数次的掌声，包括最后那次延续许久的掌声，完成了对「EVA」系列的告别。笔者也作为见证者的见证，见证了喜爱「EVA」的人们的补完：一部分观众与Cosplay成明日香与绫波丽的观众合影；爱好者携带着明日香与绫波丽、渚薰的人偶前来观影；等等。笔者想，尽管二十多年前日本观众看到「真心为你」结尾那个结局的感慨无法体会到，不过终于能在「终」上映二年多后的本日体会到这份晚了两年的感慨，也足够幸福了。</p><h1 id="柒-六月十五日"><a href="#柒-六月十五日" class="headerlink" title="柒 六月十五日"></a>柒 六月十五日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-10.jpg" alt="picture"></p><h2 id="「拥抱！光之美少女♡光之美少女-All-Stars-Memories」"><a href="#「拥抱！光之美少女♡光之美少女-All-Stars-Memories」" class="headerlink" title="「拥抱！光之美少女♡光之美少女 All Stars Memories」"></a>「拥抱！光之美少女♡光之美少女 All Stars Memories」</h2><p>电影本身虽然并不出色，包括前半手绘后半3D的观感其实18年看的时候就能感到很微妙，不过这次siff观看的体验真是相当好啊。历代的q娃和小q娃都能在电影院里看到实在是太过享受，而更令笔者心动的则是在影院中为观众与其他角色念出咒语「キュアップラパパ」的法q三人组。此外也第一次在体会到了光美系列电影与观众交互的独特体验。很难得能看到观众们和q娃们一起挥动ミラクルライト，一起为q娃们加油的场景，而笔者本人也参与到了其中。抱碳与观众互动的一幕也由此变得与独自一人观看时全然不同了。</p><h1 id="捌-六月十六日"><a href="#捌-六月十六日" class="headerlink" title="捌 六月十六日"></a>捌 六月十六日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-11.jpg" alt="picture"></p><p>今天两部电影间隔比较久，故而又抽空看了部院线在映的「万湖会议」（22年德国版）。</p><h2 id="「美少女战士Cosmos」前篇-后篇"><a href="#「美少女战士Cosmos」前篇-后篇" class="headerlink" title="「美少女战士Cosmos」前篇 &amp; 后篇"></a>「美少女战士Cosmos」前篇 &amp; 后篇</h2><p>这两部算是本届siff日本动画电影里唯一世界首映的电影了。除去这个噱头之外倒主要是想多看看Mercury，可惜最终也没咋出场。林原每次一开口都很难绷得住，很明显的哀的声线。前篇数次月野兔起床和取信件的几卡算是唯一的亮点吧。剩下唯一能说说的大概也就是OP做得还不错了。</p><h2 id="「影像之书」"><a href="#「影像之书」" class="headerlink" title="「影像之书」"></a>「影像之书」</h2><p>一部“查重率99%”的论文式电影。戈达尔以影像完成了本雅明未曾实现的想法。在电影院看本片的痛苦尽管不及「电影史」，但恐怕也相差不多。笔者想本片大抵也与戈达尔的那几部「电影史」互成两面，从中能看到两个不同阅历的戈达尔的对立。当然，笔者仍然还是看不懂本片，因而也无从评价了。</p><h1 id="玖-六月十七日"><a href="#玖-六月十七日" class="headerlink" title="玖 六月十七日"></a>玖 六月十七日</h1><p><img src="/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/picture-12.jpg" alt="picture"></p><p>本届siff个人要看的最后一场电影，以七小时长的「菲律宾暴力史」收尾。</p><h2 id="「菲律宾暴力史」"><a href="#「菲律宾暴力史」" class="headerlink" title="「菲律宾暴力史」"></a>「菲律宾暴力史」</h2><p>实在是很难以想象的电影。</p><p>全长将近七小时的电影竟然连幕间都没有，而这些时长除了两段主观镜头外竟全由固定镜头构成。除少部分梦中画面外全为黑白，伴随其的则是没有任何音乐的嘈杂环境音，又加以刻意的“故障的”收音效果。在这些镜头中，不用说什么视线引导一类的诀窍，即使是最常见的剪切手法与镜头语言，甚至是连百年前就已探索出的正反打都没有出现。然而这彻底舍弃镜头言语的结果却与百年前还未探索出这些技巧时的影片全然不同。片中角色丝毫不理会摄像机的存在，随意地进出于画框内外，甚至不在意将自己的身体部分地游离在画框之外。这种反常恰巧揭露了本片中观众才是被限制的一方。而由角色给予观众的不自在感，也正提示着观众，他们甚至连只是作为历史一角存在的片中角色生活的一隅都无法了解透彻。</p><p>另一方面，片中又大胆使用了大量的念白、歌唱与凝滞的画面。其内涵的明晃晃的暗喻与上述所提及的宛如平铺直叙一般的固定机位长镜头也从文学意义上赋予了本片小说的特性，一如开场文字就已提及，本片是一部“film novel”。很喜欢片末摄影机朝向精神病院的那一段空镜头。在角色多次歌唱的音乐与悠闲的风景画面之中突然的一声枪击，昭示着这部史诗中旧时代统治者的彻底退位。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>回看本届siff期间最终看了14部电影，外加三部院线上映的电影。也是第一次能拥有在影院观看超长时间电影的体验。不过这些日子在影院坐的时间实在有些太久了，弄的笔者腰酸背痛。以后还是尽量少排时长太长的电影吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/06/17/Siff25-20230604/cover-picture.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客 &lt;br&gt;发表日期：2023.06</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="电影" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>EM·魔术师·异色眼卡组分享</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/</id>
    <published>2023-06-15T05:47:15.000Z</published>
    <updated>2024-07-23T13:47:54.986Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/cover-picture.jpg" alt="Cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2023.06.15</p></blockquote><h1 id="卡组介绍"><a href="#卡组介绍" class="headerlink" title="卡组介绍"></a>卡组介绍</h1><p>直接上图：</p><p><img src="/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/deck-1.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/deck-2.jpeg" alt="Picture"></p><p>本卡组最先是在19年7月初步构造完成，后续几年间逐渐进行调整。额外卡组位原先包含水机（「水晶机巧继承玻纤」），但由于22年7月表其变为禁止卡，故暂时以「轨迹之魔术师」替代。</p><h1 id="常用combo"><a href="#常用combo" class="headerlink" title="常用combo"></a>常用combo</h1><p>展开的目标套路是通过两个摆子拉「EM 灵摆魔术师」，根据情况选择炸一张或两张的P区来检索「EM 同调士」或者「EM 骷髅小丑」。在手牌佳的情况可以考虑利用「EM 骷髅小丑」来达到迅速赚卡的目的，而不需要赚卡的情况则可以利用「EM 同调士」来完成同调终端的要求。场上只要有两只灵摆怪兽就能链接召唤出「刚炼装勇士・银金公主」。这张卡是魔术师卡组的核心之一。利用一效可以讲「刻读之魔法师」或「宙读之魔法师」表侧加入额外，而再次利用二效炸P区拉刻读或者宙读就可以进行快速特招，还能利用刻读或者宙读的效果继续检索赚卡或是特招。</p><p>「神圣魔皇后塞勒涅」的加入也可以加速终端的完成。由于场上P区两张摆子已经算魔法卡，故而只需要双方场上与墓地再有一张魔法卡就能满足其三效的cost，可以快速进行多一次的特招。link-3则让通过这张方式直接出一些要求不高的link-4终端变得方便快捷（如「召命之神弓-阿波罗萨 -」）。</p><p>另一方面，初期上手时，基本不会太过卡手。「EM 骷髅小丑」可以通招检索魔术师，刻读和宙读可以置于P区发动P效果来直接拉「时读之魔术师」与「星读之魔术师」上场。「决斗者降临」也可以稳定检索「灵摆」字段。而「星霜之灵摆读阵」则可以保证每回合稳定入手魔术师字段的怪兽。此外，「贱龙之魔术师」的P效一可以从额外回收表侧存在的魔术师或异色眼怪兽，「白翼之魔术师」、「调弦之魔术师」也可以进行额外的特招。</p><p>抗性方面，「时空之灵摆读阵」与「灵摆切换」两张永续陷阱组成了极强的机构。先来看这两张卡最关键的两个效果：</p><blockquote><p>「时空之灵摆读阵」二效：<br>以自己的怪兽区域·灵摆区域1张「魔术师」灵摆怪兽卡和对方场上1张卡为对象才能发动。那些卡破坏。没能因这个效果把2张卡破坏的场合，可以选场上1张卡送去墓地。<br>「灵摆切换」：<br>可以选择自己的灵摆区域1张卡；那张卡特殊召唤。可以选择自己的怪兽区域1只灵摆怪兽；那只怪兽在自己的灵摆区域放置。“灵摆切换”的效果1回合只能有1次使用其中任意1个。</p></blockquote><p>由此可以直接做出这样的效果：</p><p>当场上或P区有至少一只灵摆怪兽A时，先利用「时空之灵摆读阵」的二效选中A，再利用「灵摆切换」的效果选中A。由于连锁发动的时点是「灵摆切换」先起效，随后再处理「时空之灵摆读阵」的二效。当处理到「时空之灵摆读阵」的二效时，由于「灵摆切换」的效果已被处理因而A无法被破坏，从而可以发动「时空之灵摆读阵」二效的送墓效果。尽管这个效果是取对象的，但其作为送墓而非破坏的效果已经足够强大了。</p><p>另一方面，「紫毒之魔术师」的P效一、「霞之谷的巨神鸟」也给了卡组一定的抗性。「天空之虹彩」在场的情况也能够使得场上的魔术师EM和异色眼怪兽处于无法被取对象的情况。处于个人习惯，笔者在这个卡组内加入了一些手坑。尽管这些泛用手坑和EM·魔术师·异色眼的相性没那么高，不过也可以考虑对方卡组情况而针对性的带几张。注意，由于EM·魔术师·异色眼的系统本身赚卡能力就已足够强大，因而一般情况下无需再加入「增殖的G」。</p><p>额外方面，「霸王眷龙凶饿毒」、「装弹枪管狞猛龙」、「访问码语者」、「装弹枪管龙」等等都算是比较泛用的终端，有着很高的强度，由于做出来的条件不算严苛且对字段属性种族等都没太高要求，因而在本卡组内也建议投入。「霸王眷龙幻透翼」、「饥凶毒致死龙」、「星刻之魔术师」、「轨迹之魔术师」则是本家怪兽，也有着较强力的效果，笔者个人而言比较喜欢。</p><h1 id="调整思路"><a href="#调整思路" class="headerlink" title="调整思路"></a>调整思路</h1><p>由于EM字段的强力卡基本都被禁了，因而可以根据需要从魔术师和异色眼字段寻找一些卡片投入。</p><p>另一方面，由于即将发售的1202中霸王也成为了新字段，因而可以考虑投入霸王字段的卡片。</p><p>另一方面根据每季度的禁限卡表也可以考虑对卡片数量做出调整，如23年1月表起「虹彩之魔术师」不再为限制卡，可以考虑投入两张。泛用终端以及手坑也可以根据个人的喜好以及其与本卡组的相性进行一定程度的调整。</p><h2 id="2023年7月表后的新调整思路"><a href="#2023年7月表后的新调整思路" class="headerlink" title="2023年7月表后的新调整思路"></a>2023年7月表后的新调整思路</h2><p>由于23年7月表起「EM琴键猴」由禁止卡调整为限制卡，故而可以向卡组中再多投入一张琴键猴。这一调整对整个卡组的提升相当有效。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>本文所用卡图大多来源于<a href="https://db.yugioh-card-cn.com/index.html">游戏王中国官方卡查网站</a></li><li>本文卡组的卡图与文字版图片由游戏王官方APP“Neuron”导出</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/06/15/YGOMagicianDeck-202304-20230615/cover-picture.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="游戏" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="游戏王" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%B8%B8%E6%88%8F%E7%8E%8B/"/>
    
  </entry>
  
  <entry>
    <title>对PPPoE协议的理解——从电信动态公网环境出发</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/03/PPPoE-20230603/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/06/03/PPPoE-20230603/</id>
    <published>2023-06-03T16:16:32.000Z</published>
    <updated>2024-07-23T13:47:54.438Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于个人博客 <br>发表日期：2023.6.3</p></blockquote><h1 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h1><p>自从家里有公网环境后，经常会发现家里网络有频率地短时间掉线。该频率从数天一次到数周一次不等。在之前配置VPN时，由于知道目前家宽给的公网都是动态公网，换言之每过一段时间家宽的公网IP地址会发生更改，因而配置与访问时都是使用DDNS利用域名来完成的。注意到每次断网前后家宽的公网IP都会发生更改，结合网络检索可以发现，该问题的起因是由于ISP为了不让用户长时间独占IP而主动以一定频率重新分配IP所导致的。</p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>解决方式其实很简单，找个不用网络的时间重启光猫，或是路由器重新拨号即可。事实上，如果不在意经济条件的话可以购买静态公网IP的线路，不过价格太过昂贵，因而这里也不是很推荐。</p><h1 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h1><p>事实上，在锻炼断连期间阅览路由器的log，可以注意到有这么一条关键报错：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pppd[10432]: Timeout waiting for PADO packets</span><br></pre></td></tr></table></figure><p>其中PADO报文就是在PPPoE会话建立过程中由服务器（ISP端）向客户端（家庭光猫 &#x2F; 路由器）发送的报文。完整的PPPoE会话建立过程如下：</p><p><img src="/pikapikapi-blog-hexo/2023/06/03/PPPoE-20230603/picture-1.png" alt="picture"></p><p>换言之，实质上可能是由于在ISP重新分配IP后，由于某些原因路由器拨号时没有发现ISP方用于PPPoE拨号上网的服务器，导致一直无法收到对应的PADO报文。这种情况下手动重启光猫或路由器重新拨号一般就能解决这一问题。</p><p>当然，多数情况下不会出现路由器无法发现ISP方服务器的问题，因而通常在数分钟的断网后路由器就能重新拨号成功，保证网络继续可用。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>PPPoE Dial-up Implementation - AR500, AR510 AR531, AR550, and AR2500 V200R008 CLI-based Configuration Guide - WAN - Huawei. (2022, December 14). PPPoE Dial-up Implementation - AR500, AR510 AR531, AR550, and AR2500 V200R008 CLI-based Configuration Guide - WAN - Huawei. <a href="https://support.huawei.com/enterprise/en/doc/EDOC1000154779/37d3dce5/pppoe-dial-up-implementation">https://support.huawei.com/enterprise/en/doc/EDOC1000154779/37d3dce5/pppoe-dial-up-implementation</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客 &lt;br&gt;发表日期：2023.6.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="网络" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>IPSec 技术的理解</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/</id>
    <published>2023-05-27T10:02:27.000Z</published>
    <updated>2024-07-23T13:47:53.474Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于个人博客 <br>发表日期：2023.5.27</p></blockquote><p>目前家里两个地方都有公网环境，为了保证安全性与防止备案问题（也就是不想给外部用户提供任何服务），所以利用华硕路由器都配置了IPSec VPN。这两天想看看他的安全性问题，所以看了看IPSec技术的原理。</p><h1 id="主流IPSec-VPN配置"><a href="#主流IPSec-VPN配置" class="headerlink" title="主流IPSec VPN配置"></a>主流IPSec VPN配置</h1><p>看了看目前比较主流的配置大致就两种：</p><ul><li>L2TP &#x2F; IPSec</li><li>Cisco IPSec (IPSec &#x2F; IKE)</li></ul><p>华硕路由器原生支持的是后者，在MacOS上则是两种都支持。</p><h1 id="IPSec-技术"><a href="#IPSec-技术" class="headerlink" title="IPSec 技术"></a>IPSec 技术</h1><p>先看IPSec技术本身，其工作在第三层即网络层上，需要开放UDP500和4500端口。报文大致含有以下内容：</p><ul><li>认证头AH，维基上给出的结构如下（懒了直接把维基html抄下来了）：</li></ul><table class="wikitable" style="margin:1em auto; text-align: center"><caption style="background:#781549; color:white;"><i>Authentication Header</i> format</caption><tbody><tr><th style="border-bottom:none; border-right:none;"><i>Offsets</i></th><th style="border-left:none;">Octet<sub>16</sub></th><th colspan="8">0</th><th colspan="8">1</th><th colspan="8">2</th><th colspan="8">3</th></tr><tr><th style="border-top: none">Octet<sub>16</sub></th><th>Bit<sub>10</sub></th><th style="width:2.6%;">0</th><th style="width:2.6%;">1</th><th style="width:2.6%;">2</th><th style="width:2.6%;">3</th><th style="width:2.6%;">4</th><th style="width:2.6%;">5</th><th style="width:2.6%;">6</th><th style="width:2.6%;">7</th><th style="width:2.6%;">8</th><th style="width:2.6%;">9</th><th style="width:2.6%;">10</th><th style="width:2.6%;">11</th><th style="width:2.6%;">12</th><th style="width:2.6%;">13</th><th style="width:2.6%;">14</th><th style="width:2.6%;">15</th><th style="width:2.6%;">16</th><th style="width:2.6%;">17</th><th style="width:2.6%;">18</th><th style="width:2.6%;">19</th><th style="width:2.6%;">20</th><th style="width:2.6%;">21</th><th style="width:2.6%;">22</th><th style="width:2.6%;">23</th><th style="width:2.6%;">24</th><th style="width:2.6%;">25</th><th style="width:2.6%;">26</th><th style="width:2.6%;">27</th><th style="width:2.6%;">28</th><th style="width:2.6%;">29</th><th style="width:2.6%;">30</th><th style="width:2.6%;">31</th></tr><tr><th>0</th><th>0</th><td colspan="8"><i>Next Header</i></td><td colspan="8"><i>Payload Len</i></td><td colspan="16"><i>Reserved</i></td></tr><tr><th>4</th><th>32</th><td colspan="32"><i>Security Parameters Index (SPI)</i></td></tr><tr><th>8</th><th>64</th><td colspan="32"><i>Sequence Number</i></td></tr><tr><th>C</th><th>96</th><td colspan="32" rowspan="2"><i>Integrity Check Value (ICV)</i><br>...</td></tr><tr><th>...</th><th>...</th></tr></tbody></table><ul><li>加密过的报文ESP，同样可以看一下结构：</li></ul><table class="wikitable" style="margin:1em auto; text-align: center"><caption style="background:#781549; color:white;"><i>Encapsulating Security Payload</i> format</caption><tbody><tr><th style="border-bottom:none; border-right:none;"><i>Offsets</i></th><th style="border-left:none;">Octet<sub>16</sub></th><th colspan="8">0</th><th colspan="8">1</th><th colspan="8">2</th><th colspan="8">3</th></tr><tr><th style="border-top: none">Octet<sub>16</sub></th><th>Bit<sub>10</sub></th><th style="width:2.6%;">0</th><th style="width:2.6%;">1</th><th style="width:2.6%;">2</th><th style="width:2.6%;">3</th><th style="width:2.6%;">4</th><th style="width:2.6%;">5</th><th style="width:2.6%;">6</th><th style="width:2.6%;">7</th><th style="width:2.6%;">8</th><th style="width:2.6%;">9</th><th style="width:2.6%;">10</th><th style="width:2.6%;">11</th><th style="width:2.6%;">12</th><th style="width:2.6%;">13</th><th style="width:2.6%;">14</th><th style="width:2.6%;">15</th><th style="width:2.6%;">16</th><th style="width:2.6%;">17</th><th style="width:2.6%;">18</th><th style="width:2.6%;">19</th><th style="width:2.6%;">20</th><th style="width:2.6%;">21</th><th style="width:2.6%;">22</th><th style="width:2.6%;">23</th><th style="width:2.6%;">24</th><th style="width:2.6%;">25</th><th style="width:2.6%;">26</th><th style="width:2.6%;">27</th><th style="width:2.6%;">28</th><th style="width:2.6%;">29</th><th style="width:2.6%;">30</th><th style="width:2.6%;">31</th></tr><tr><th>0</th><th>0</th><td colspan="32"><i>Security Parameters Index (SPI)</i></td></tr><tr><th>4</th><th>32</th><td colspan="32"><i>Sequence Number</i></td></tr><tr><th>8</th><th>64</th><td colspan="32" rowspan="2"><i>Payload data</i></td></tr><tr><th>...</th><th>...</th></tr><tr><th>...</th><th>...</th><td colspan="8" style="border-top-style: hidden;">&nbsp;</td><td colspan="24" style="border-bottom-style: hidden;">&nbsp;</td></tr><tr><th>...</th><th>...</th><td colspan="8" style="border-right-style: hidden;">&nbsp;</td><td colspan="16"><i>Padding (0-255 octets)</i></td><td colspan="8" style="border-left-style: hidden;">&nbsp;</td></tr><tr><th>...</th><th>...</th><td colspan="16" style="border-top-style: hidden;">&nbsp;</td><td colspan="8"><i>Pad Length</i></td><td colspan="8"><i>Next Header</i></td></tr><tr><th>...</th><th>...</th><td colspan="32" rowspan="2"><i>Integrity Check Value (ICV)</i><br>...</td></tr><tr><th>...</th><th>...</th></tr></tbody></table><p>当然根据具体协议封装方式不同其结构也有所不同，但基本上都会含有上面的部分。从上面也可以看出，IPSec包含了这些协议：AH、ESP和ISAKMP。</p><p>IPSec通常有两种传输模式，即隧道模式和传输模式。工作方式见名知意。</p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-1.svg.png" alt="picture"></p><h2 id="L2TP-IPSec"><a href="#L2TP-IPSec" class="headerlink" title="L2TP &#x2F; IPSec"></a>L2TP &#x2F; IPSec</h2><p>L2TP工作在第二层数据链路层，使用端口UDP1701。某种意义上可以理解成是把PPP载荷包了一层UDP。由于IPSec更多侧重于对数据报文的加密也就是安全性，在用户认证上比较薄弱。因而常会考虑将L2TP和IPSec结合。</p><p>仔细想一下，当家里路由器桥接光猫，路由器拨号的时候，光猫只作Modem，路由器通过PPPoE方式拨号，这里PPPoE实质上就是封装了PPP协议。大概是由于PPP擅于进行身份认证和IP分配，所以大量采用PPPoE方式来接入宽带。</p><p>总之由于L2TP可以很方便地做多用户的认证，可以很好地解决IPSec在这方面的缺陷，所以两者经常被组合使用。</p><h2 id="Cisco-IPSec-IPSec-IKE"><a href="#Cisco-IPSec-IPSec-IKE" class="headerlink" title="Cisco IPSec (IPSec &#x2F; IKE)"></a>Cisco IPSec (IPSec &#x2F; IKE)</h2><p>Cisco的IPSec大体上是结合使用了IKE协议，当然也有在此之上再利用L2TP协议的，不过华硕和MacOS似乎都没有支持？因而这里不作探讨。</p><p>先说IKE协议，全程即网络密钥交换协议，基本上是用下列方式进行身份认证和密钥分发的：</p><ul><li>身份认证，支持PSK、RSA、数字信封</li><li>身份保护，利用DH密钥交换算法和PFS</li></ul><p>IKEv1和v2最大不同在于v2简化了协商过程并修复了些安全漏洞。</p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-2.png" alt="picture"></p><p>基本的认证过程如上图。</p><p>现在考虑IPSec和IKE组合使用的情景，也就是大部分的实际情景：</p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-3.png" alt="picture"></p><p>注意这里IPSec进行加密和认证的时候支持MD5和SHA-1，在IKE认证部分则是利用了FPS和PSK或RSA（这里是提供给配置者自选的）。</p><p>可以再结合Cisco官网的图片和解释看一下：</p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-4.jpg.avif" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-5.jpg.avif" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/27/IPSecKnowledge-20230527/picture-6.jpg.avif" alt="picture"></p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>个人来看对个人用户而言这种安全性是足够了的。嫌证书认证麻烦不用RSA而选择PSK都已经足够。其实华硕本身也提供了证书可以使用，不过由于家宽一般都是动态公网IP每次IP变了都要重新弄成本也确实相对高一点。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>IPsec and IKE. (2023, April 5). IPsec and IKE. <a href="https://sc1.checkpoint.com/documents/R81/WebAdminGuides/EN/CP_R81_SitetoSiteVPN_AdminGuide/Topics-VPNSG/IPsec-and-IKE.htm">https://sc1.checkpoint.com/documents/R81/WebAdminGuides/EN/CP_R81_SitetoSiteVPN_AdminGuide/Topics-VPNSG/IPsec-and-IKE.htm</a></li><li>Introduction to Cisco IPsec Technology. (2007, August 3). Cisco. <a href="https://www.cisco.com/c/en/us/td/docs/net_mgmt/vpn_solutions_center/2-0/ip_security/provisioning/guide/IPsecPG1.html">https://www.cisco.com/c/en/us/td/docs/net_mgmt/vpn_solutions_center/2-0/ip_security/provisioning/guide/IPsecPG1.html</a></li><li>IPsec - Wikipedia. (2014, February 18). IPsec - Wikipedia. <a href="https://en.wikipedia.org/wiki/IPsec#">https://en.wikipedia.org/wiki/IPsec#</a></li><li>IPSec IKEv1&amp;IKEv2_ike sa是双向的吗_text1.txt的博客-CSDN博客. (2001, November 14). IPSec IKEv1&amp;IKEv2_Ike sa是双向的吗_text1.txt的博客-CSDN博客. <a href="https://blog.csdn.net/weixin_51045259/article/details/113639007?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-113639007-blog-123870000.235%5Ev36%5Epc_relevant_default_base3&spm=1001.2101.3001.4242.4&utm_relevant_index=8">https://blog.csdn.net/weixin_51045259/article/details/113639007?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-113639007-blog-123870000.235^v36^pc_relevant_default_base3&amp;spm=1001.2101.3001.4242.4&amp;utm_relevant_index=8</a></li><li>HCIE-Security Day33：IPSec：深入学习ipsec ikev2、IKEV1和IKEV2比较_ike v1与ike v2的区别_小梁L同学的博客-CSDN博客. (2001, May 12). HCIE-Security Day33：IPSec：深入学习ipsec Ikev2、IKEV1和IKEV2比较_Ike V1与ike V2的区别_小梁L同学的博客-CSDN博客. <a href="https://blog.csdn.net/qq_36813857/article/details/123870000">https://blog.csdn.net/qq_36813857/article/details/123870000</a></li><li>Basic Concepts of IPSec - S600-E V200R011C10 Configuration Guide - VPN - Huawei. (2021, October 20). Basic Concepts of IPSec - S600-E V200R011C10 Configuration Guide - VPN - Huawei. <a href="https://support.huawei.com/enterprise/en/doc/EDOC1000178025/ae03ecd3/basic-concepts-of-ipsec">https://support.huawei.com/enterprise/en/doc/EDOC1000178025/ae03ecd3/basic-concepts-of-ipsec</a></li><li>既然IPsec有隧道模式，为什么还有L2TP+IPsec这样的组合？ - 知乎. (2018, June 15). 既然IPsec有隧道模式，为什么还有L2TP+IPsec这样的组合？ - 知乎. <a href="https://www.zhihu.com/question/279686051">https://www.zhihu.com/question/279686051</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客 &lt;br&gt;发表日期：2023.5.27&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前家里两个地方都有公网环境，为了保证安全性与防止备案问题（也就是不想给外部用户提供任何服务），所以利用华硕路由器都配置了IPSec VPN。这两天</summary>
      
    
    
    
    <category term="技术" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="安全" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%AE%89%E5%85%A8/"/>
    
    <category term="网络" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>个人博客搭建心得（壹）：以CSS 3为代表的一些前端开发感悟</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/08/BlogBuildingInsightsNotesOne-20230508/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/08/BlogBuildingInsightsNotesOne-20230508/</id>
    <published>2023-05-08T14:20:43.000Z</published>
    <updated>2024-07-23T13:47:53.462Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于个人博客 <br>发表日期：2023.5.8</p></blockquote><h1 id="前期考虑"><a href="#前期考虑" class="headerlink" title="前期考虑"></a>前期考虑</h1><p>最近搭个人博客，最终选择了利用Docsify这个框架，主要原因有这么几点；</p><h2 id="经济成本"><a href="#经济成本" class="headerlink" title="经济成本"></a>经济成本</h2><p>尽管家里有两台有公网的服务器，但考虑到备案的时间长短、以及一些其他的隐性成本，因而使用家里服务器甚至于国内可购买的服务器都不是一个很好的选择。相应的，如果在国外购买服务器一是支付方式不便捷，二来需要较高的成本。</p><p>相较之下由于我的个人博客不会有超大量的文章以及评论等，因而可以直接部署的静态网页成了一个相当好的选择。以GitHub Pages和Vercel为代表的一众平台都给个人用户提供了较多的资源用于前端搭建，使得搭建博客的成本可以大大降低。同时，这些平台都支持https协议，并且生成的域名也不是很难看。即使实在不喜欢也可以很容易的自己购买域名进行配置，非常简便。</p><h2 id="开发成本"><a href="#开发成本" class="headerlink" title="开发成本"></a>开发成本</h2><p>由于我更希望我的博客注重于转写文章本身而非锻炼开发能力之类的，因而使用现成的博客框架是第一考虑。</p><p>看了很久博客框架发现Docsify算是一个比较轻量级的框架。首先Docsify本身的快速搭建是极方便的，宣扬的十分钟还是半小时搭一个简单网页确实不是吹的。更重要的是，动态渲染这一特性不像Hexo为代表的其他框架一样需要编译甚至部署后才能查看，相反本地起个server就能即使看到效果，这对博客定制化开发与博客内容的撰写都是相当方便的一大特性。由动态渲染这一特性延伸出来的便是二次开发的高度灵活性。借用Docsify自身提供的几个钩子，甚至不用也行，可以直接以UMD方式挂在其他前端轮子，或者自己写好css和js后直接挂载进来，而无需其他的一系列操作。相较之下Hexo、Vuepress为代表的其他框架可能开发上就相对死板一些，不是很符合我个人喜好。</p><h2 id="Docsify总结"><a href="#Docsify总结" class="headerlink" title="Docsify总结"></a>Docsify总结</h2><p>总体来看Docsify现成轮子会相对少一点，不过这些东西可以自己随便写写玩反倒更灵活自由，不过动态渲染这一点使得撰写与开发都相当便捷这是我很喜欢的一点。当然SEO可能会相对差一点，不过这一点一来可以考虑利用v4提供的SSR来解决，相反即使不解决我都部署在GitHub Pages上了我显然是不需要也不想要做这个的。</p><p>总之再用上这么个框架后，为了满足自己喜好加点自己想要的花里胡哨的界面啊功能啊之类的东西，最近写了不少原生的html 5 + css 3 + js代码，确实是有不少感悟。</p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><p>感悟最深的大概就是css的使用了。说实话一直以来我其实在服务端做的东西比较多，前端基本上就是用用组件库应付应付课设，也不会特别关注美观度啊动画啊之类的东西。写博客为了想要点好看的东西不得不好好看看css写法，发现原来css还能玩的这么花里胡哨。比如在我博客的<a href="/writings/BriefComments">随笔下的短评部分</a>，我想要以年为单位记录短评，每个年份类似一个details标签的行为，但是默认的details标签样式实在太丑了，我也不想为了这么个简单的小功能写一大段js挂在到<code>index.html</code>，看了看stackoverflow上发现可以用伪元素来写：</p><p>当然这里用了<code>@media</code>来做响应式，这也是以前很少考虑的一点。一方面基本上不会怎么去做不同分辨率屏幕的适配，一方面就算做基本上也就是用个ElementUI的布局就算完事了。现在想想感觉其实是有点太依赖组件库了，不是一个很好的事。最近想试试用Swift写Web后端的时候第一反应也是看看Vapor怎么用，感觉确实是有点太思维定势了：后端用框架、前端用框架加组件库。工程上说挺合理的，节约成本。不过自己开发的时候一来是高度定制化的需求很难满足，二来确实会少很多乐趣。</p><p>    <iframe width="100%" height="300px" src="//jsfiddle.net/pikapikapi/b9Lu37v6/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0" style="border-radius: 7px"></iframe></p><p>说回css，这个伪元素确实是个很好用的东西。同样是这个界面，我想在标题之间加个分割线，希望这个分割线是中间有个小星星，然后左右有两条短线；而在短评内部最下方日期上希望有个动态的吃豆人分割线。同样是利用了伪元素就可以很简单的实现：</p><p>这里<code>animation</code>和<code>@keyframe</code>也是css 3新特性，可以很方便的去做动画效果。</p><p>    <iframe width="100%" height="300px" src="//jsfiddle.net/pikapikapi/pyb42tus/10/embedded/html,css,result/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0" style="border-radius: 7px"></iframe></p><p>当然也可以利用<code>transform</code>这个新特性来做动画效果。这个博客上右侧的小组件显示隐藏逻辑就是这么做的：</p><p>    <iframe width="100%" height="300px" src="//jsfiddle.net/pikapikapi/ft3kares/28/embedded/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0" style="border-radius: 7px"></iframe></p><h1 id="js"><a href="#js" class="headerlink" title="js"></a>js</h1><p>另外js上碰到的最大的麻烦是想做个查看大图的功能，看了看stackoverflow上比较高的做法是做一个宽<code>100vw</code>高<code>100vh</code>的整体span，点击图片把span的<code>display</code>设成<code>block</code>，再点span设成<code>none</code>，不过那个版本太粗糙还有很多问题，比如我要放按钮的话子元素点击也会触发父元素的。今天重构了一下大概变成现在的样子：</p><p>思路还是用span遮盖，同时设置<code>z-index</code>防其他事件的影响，在span里面放div来包裹组件，同时span的点击事件先去根据事件的<code>target.id</code>来判断触发者，从而来确保子元素点击事件不会总是触发父元素的点击事件。</p><p>js逻辑里拿元素根据类名做filter的步骤感觉可以用<code>querySelectorAll</code>来简化一下。</p><p>另外也用<code>backdrop-filter</code>和<code>-webkit-backdrop-filter</code>做了个毛玻璃的背景效果，更好看些。</p><p>    <iframe width="100%" height="300" src="//jsfiddle.net/pikapikapi/fkt849L2/15/embedded/" allowfullscreen="allowfullscreen" allowpaymentrequest frameborder="0" style="border-radius: 7px"></iframe></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>How to position marker to come after. (2019, June 25). Stack Overflow. <a href="https://stackoverflow.com/questions/56758098/how-to-position-detail-marker-to-come-after-summary">https://stackoverflow.com/questions/56758098/how-to-position-detail-marker-to-come-after-summary</a></li><li>How do I make an image full screen on click? (2021, June 3). Stack Overflow. <a href="https://stackoverflow.com/questions/67815853/how-do-i-make-an-image-full-screen-on-click">https://stackoverflow.com/questions/67815853/how-do-i-make-an-image-full-screen-on-click</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客 &lt;br&gt;发表日期：2023.5.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;前期考虑&quot;&gt;&lt;a href=&quot;#前期考虑&quot; class=&quot;headerlink&quot; title=&quot;前期考虑&quot;&gt;&lt;/a&gt;前期考虑&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="技术" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="开发" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>ノート：アルバム　令和5年5月8日</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/</id>
    <published>2023-05-08T09:00:30.000Z</published>
    <updated>2024-07-23T13:47:54.046Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/cover-picture.JPG" alt="cover"></p><blockquote><p>この記事は、私の個人ブログで最初に公開されました<br>公開日：2023.5.8</p></blockquote><p>令和5年5月6日、上海。</p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-1.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-2.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-3.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-4.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-5.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/picture-6.jpeg" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2023/05/08/Notes-20230508/cover-picture.JPG&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;この記事は、私の個人ブログで最初に公開されました&lt;br</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="アルバム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0/"/>
    
    <category term="日本語" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
    <category term="ゲーム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%B2%E3%83%BC%E3%83%A0/"/>
    
    <category term="玩具" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E7%8E%A9%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>软件项目实践的一些思索与后期优化方向：设计、开发以及其他</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/</id>
    <published>2023-04-28T06:30:02.000Z</published>
    <updated>2024-07-23T13:47:54.982Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于个人博客 <br>发表日期：2023.4.28</p></blockquote><p>大四下最后的一门课也结束了。这门课大体是由数个人组成一个小小团体进行一个小小项目从零到一的完整开发过程，不同于其他课程，这个项目要求以类似于实际开发的模式，让所有参与者都经历由需求确定、初期架构设计到中期开发、版本发布甚至于是需求变更以及迭代的完整软件开发的整个生命周期。当然其中也包括不同团队间的沟通协商。</p><p>大体而言我在其中以项目经理、架构设计、团队Leader等各种身份参与了后端的完整开发，并也作为开发者参与到了前端部分的开发任务中。个人从中确实有不少感悟，故而写此文记录。在这里主要想谈谈设计、开发的一些感想，诸如进度管理、质量把控等等可能也略有涉及。</p><h1 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h1><p>大体而言这个课程项目要求做一个宠物医院的线上学习平台，主要受众大概就是即将毕业或是正在大学学习的兽医相关专业的学生。其功能简要来讲大概有这么几类：</p><ul><li>用户管理与鉴权：常规的大系统都有的功能，这里大体上就分为管理员、出题的老师和进行学习的学生三类用户。</li><li>一个完整医院的3D全景地图与导览模型：前端开发为主的功能，本文不涉及。</li><li>系统管理：要求对这个宠物医院内诸如药物、档案、收费项目、各类检查项目、住院者的信息等等各类内容进行管理，不过这个东西似乎没有在需求文档中体现出实际的意义与用处。</li><li>病例管理：大体上是需要把来医院就诊过的各类病例收集起来存储，其包括从入院诊断、具体检查到诊断结果与治疗方案等全过程的文字图片视频信息，当然也包括得的病的信息。</li><li>测试管理：由病例管理上游的疾病部分内容衍生而来。老师根据疾病生成题库，并从中选题整理为试卷。学生则参加考试进行答题。不过这部分内容似乎与虚拟宠物医院没有太大关系。</li><li>职能学习：一方面是让学生去学习疾病的相关知识（当然要看文字图片视频），一方面学生也可以通过看文字图片视频学习医院内各类角色（医生、医助等等）的具体操作内容。</li><li>数据管理：和上面提到的图片视频的存储有关。需求上还挺麻烦的，视频格式支持太多还需要进行视频的格式转换，反应到和用户的交互上来说还需要实现分块上传等功能等。</li></ul><p>尽管后文对具体业务尽量不会涉及，但姑且将背景记于这里。不难看出这个项目还是一个比较传统的要用到数据库后端前端三个维度的项目，因而后文也主要想从这三个维度的设计与开发两方面来聊聊。</p><p>项目可以参考：</p><ul><li><a href="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-backend">后端</a></li><li><a href="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-frontend">前端</a></li></ul><p>本博客的仓库中也保存了相关的源码，可以参考<a href="https://github.com/pikapikapikaori/pikapikapi-blog/tree/master/resource/ITtech/SoftwareDevelopementInsights-20230428">这里</a>。</p><h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><p>由于课程要求重各类文档，因而并没有采取如今主流的敏捷开发模式，而是采取的<a href="#RAD">RAD</a>模型。个人来讲其实并不是很习惯这个模型，一方面其由瀑布式改进而来，从某种角度上还是非常重文档和前期的设计的，对需求的变更与过程中的变化并不敏感，另一方面也是因此在开发过程中的抗风险能力也非常依赖于前期的设计以及开发过程中的质量，由此带来的风险是非常恐怖的。</p><p>总之也是因此在进行前期设计时就花了相当多的时间。然而尽管如此，初期的设计还是有着比较大的漏洞，因而也给后期开发带来了一些麻烦。这些问题大多集中在数据库设计上。</p><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><p>由于项目较为庞大因而一些细节的设计我也没有来得及能够去亲自把控，而是交给了同组的其他人。在这里就出了问题。上文所述的测试管理中，题库中的问题需要记录与其相关的问题类别（属于哪种病）、问题类型（单选多选）、问题内容等等。针对此负责这块内容的组员A给出了这样的设计：</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/mermaid-1.png" alt="er diagram"></p><p>且不谈同学A遗漏了需要对每张卷子上包含的题目、以及每位学生在试卷上答题所做出的回答进行存储的功能，单看<code>Question</code>与<code>Category</code>两张表。乍一看虽然是挺合理的设计，然而后者的实际有效字段只有<code>category_name</code>一栏。我不否认在大型项目中这样设计的合理性，但是考虑到这个项目的规模、以及后续可能会进行的功能上的拓展，我个人看来<code>Category</code>这张表完全冗余的。</p><p>另一方面，<code>Exam</code>、<code>Paper</code>、<code>ExamSession</code>这三张一对一的表虽然也是很符合设计原则的设计，但是同样考虑到项目规模与未来可能的拓展，这三张表就算合在一起也不会对性能与吞吐量带来很大的负担。一般来讲，只有在表中有一栏以上可能包含大量空值的情况下，或是某一些栏可能被频繁更新时，一对一关系的设计才相对合理。而在当前的情形中，这样的设计则是给后期撰写<code>SQL</code>与开发上带来了巨大的麻烦。且不谈数据的整合与处理，仅仅是外键的存在就已经带来了巨大的麻烦。这也直接导致了在后期初始化数据<code>SQL</code>撰写上耗费了大量Debug的时间，在开发的编码中也需要增加大量检测外键存在性的不必要代码。</p><h2 id="后端架构设计"><a href="#后端架构设计" class="headerlink" title="后端架构设计"></a>后端架构设计</h2><p>初期设计时我就已经敲定了<a href="#%E5%BE%AE%E6%9C%8D%E5%8A%A1">微服务</a>的架构。通常，微服务确实不适合于本项目这样的小型项目：配置麻烦、DevOps麻烦，等等。此外，大型项目中服务间数据一致性以及安全性都是非常棘手且关键的问题。</p><p>不过事实上，我其实很看重松散耦合这一点。其给后期开发与迭代过程中带来的自由度是相当大的。前述的问题，如配置、DevOps的确相对棘手，不过包含公用模块、各类插件的配置在初期完成后便一了百了，运维上利用Docker与统一的脚本进行自动化管理也是一经配置后就极易使用的，并没有给开发人员带来很高的成本。倘若有购买服务器配置Jenkins进行更多的自动化的话，相关成本应该还能进一步降低。</p><p>实践中，jacoco、spotless、公共模块的配置实质上也仅仅耗费了我半天的时间，而后期部署时自动化测试脚本的编写仅仅耗费了我两个小时不到的时间。接口测试上所花费的时间略多一点，不过由于接口测试脚本基本是直接由swagger生成的，因而也没有耗费太多的成本。</p><p>相较于这些仅局限于初期和末期的麻烦而言，微服务架构带来的好处是实打实巨大的。数据库与模块的分离带来的是各模块开发的高独立性以及运行时的高可用性。前文所提到的数据库尽管经常会碰到组员产生的Bug，但分离的数据库使得其余的几个模块并没有受到影响从而能够很顺利的进行开发。另一方面，后端模块的分离使得几个模块都能够被快速地开发出来，也因此能够较早地将接口给到前端，从而留出了大量可用于迭代的时间。产生缺陷时查找定位的范围仅仅在自身的子系统内，因而定位缺陷的成本也略有降低。而最最重要的，由于模块间的松散耦合，即使一个服务失败其他服务也能够继续工作，这给开发与测试都带来了相当程度上的便捷。</p><p>更具体的，微服务给实践中的开发带来了巨大的便捷性。我在项目中大概采取了下图的架构：</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/mermaid-2.png" alt="architecture"></p><p>作为微服务而言其实也是非常常见与合理的架构。中间层充当网关的角色被外部服务（前端）统一调用，其内部则再根据具体的调用请求来选择合适的服务进行通信，并将数据进行处理后转发给外部服务。在实践中，前端组与后端组同时开发，需求细节与开发细节还不明了的情况下，接口的内容与种类尽管可以大体确定，但具体的数据内容与种类等都是难以确定的。因而，利用中间层也即网关这一角色，接口确定的难题得以被解决。前后端可以先按照自己的想法对接口进行设计与模拟，当有一定的进度、对接口需求更加明确时再利用中间层进行数据的整合与处理，从而节约了大量沟通与修改的时间。</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/mermaid-3.png" alt="sequence diagram"></p><p>实践上，数据的转发与整合可以由后端的网关接管，也可以由前端利用nodejs来开发，无论哪种都是非常灵活的。事实上，nodejs构建的中间层或称node层的出现，就是为了让前后端都更关注于业务本身。尽管层数的增加可能会给性能带来一些影响，然而这与开发效率所节省的成本相比是微乎其微的。由过去后端渲染html发送给浏览器的前后端不分离，到前后端分离开发再到中间层的进化，我想这是一个相当自然的过程，也非常值得去学习与应用。</p><p>此外，采取微服务架构，后期的扩展性也是相当高的。一方面，需要增加新业务时可以直接以模块为单位进行添加，而不需要再去对原有代码进行改动。另一方面，甚至也可以将同一服务运行在多台服务器上，并利用Eureka、Ribbon等等组件进行负载均衡与健康检查的功能，从而能够进一步提升可用性与性能，这些都是单体应用难以带来的好处。</p><p>当然，微服务的思想也能直接应用到前端上，也就是前些年提出的<a href="#%E5%BE%AE%E5%89%8D%E7%AB%AF">微前端</a>的思想。似乎前端组也有利用这一思想进行开发，不过本文就先不作赘述了。</p><h1 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h1><h2 id="后端开发仍存在的问题"><a href="#后端开发仍存在的问题" class="headerlink" title="后端开发仍存在的问题"></a>后端开发仍存在的问题</h2><p>开发上后端直接采用了SpringBoot的四层架构，基本上实现了增删改查四类功能。同时，调数据库方面使用了JPA。</p><p>需求上，为了满足全字段搜索、以及较简单的增删改功能，考虑到开发上的便捷性，查询相关的业务逻辑大体都是采取了下面的写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getFeature</span><span class="params">(</span></span><br><span class="line"><span class="params">        Integer funcId,</span></span><br><span class="line"><span class="params">        String funcName,</span></span><br><span class="line"><span class="params">        String funcDescription,</span></span><br><span class="line"><span class="params">        String funcFlow,</span></span><br><span class="line"><span class="params">        String funcRole,</span></span><br><span class="line"><span class="params">        String funcTool,</span></span><br><span class="line"><span class="params">        String roomName)</span> &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    res.put(</span><br><span class="line">            Constants.featureList,</span><br><span class="line">            JSONObject.parseArray(JSON.toJSONString(featureRepository.findAll().stream()</span><br><span class="line">                    .filter(feature -&gt; SearchJudgeHelper.softEquals(funcName, feature.getFuncName())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softIncludes(funcDescription, feature.getFuncDescription())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softIncludes(funcFlow, feature.getFuncFlow())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softIncludes(funcRole, feature.getFuncRole())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softEquals(funcTool, feature.getFuncTool())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softEquals(</span><br><span class="line">                                    roomName, feature.getFeatureRoom().getRoomName())</span><br><span class="line">                            &amp;&amp; SearchJudgeHelper.softEquals(funcId, feature.getFuncId()))</span><br><span class="line">                    .collect(Collectors.toList()))));</span><br><span class="line">    <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先说查询逻辑。为了少写<code>SQL</code>因而这里是直接调用了JPA的<code>findAll</code>方法，随后利用<code>Java</code>的流函数对其进行遍历筛选，由此得到目标结果以返回。判断相等或包含的方法由自建类进行处理，以满足空数值的比较操作，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">softEquals</span><span class="params">(String toBeJudged, String referencedValue)</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (Objects.equals(toBeJudged, <span class="literal">null</span>) || Objects.equals(toBeJudged, <span class="string">&quot;&quot;</span>))</span><br><span class="line">                ? <span class="literal">true</span></span><br><span class="line">                : Objects.equals(referencedValue, URLDecoder.decode(toBeJudged, Constants.UTF8));</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小型项目中这样的写法大体上是没什么问题的，但如果遇上较大的项目这样的写法绝对会出很大的问题。一来，论谁都能看出的遍历查询的性能问题，在十万级别数据量下大概就能有很直观的感受了，这一工作本来应该在数据库中利用索引来优化解决。二来，大量的吞吐量给服务器带来了IO上巨大负担。其潜在的风险是难以估量的。</p><p>为了在满足需求的基础上尽可能简化开发上的工作量（即少写<code>SQL</code>与对应的函数），我目前的想法是利用正则表达式（例如MySQL中的<code>REGEXP</code>关键字）进行查询，由此将查询的相关工作返还给数据库。利用数据库内部的索引等机制对查询进行优化（MySQL内部索引的B+树能带来数倍的性能），借此来消除服务器的负担。借由这一方法全字段搜索可以通过唯一的一条<code>SQL</code>来实现，也符合尽量不写<code>SQL</code>的原则。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dao层</span></span><br><span class="line"><span class="meta">@Query(value = &quot;SELECT f.* FROM Feature f WHERE (f.name REGEXP :funcNameRegExp) AND (f.description REGEXP :funcDescriptionRegExp)&quot;, nativeQuery = true)</span></span><br><span class="line">ArrayList&lt;Feature&gt; <span class="title function_">findFeatureByRegExp</span><span class="params">(<span class="meta">@Param(&quot;funcNameRegExp&quot;)</span> String funcNameRegExp, <span class="meta">@Param(&quot;funcDescriptionRegExp&quot;)</span> String funcDescriptionRegExp)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Service层</span></span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getFeature</span><span class="params">(</span></span><br><span class="line"><span class="params">        String funcName,</span></span><br><span class="line"><span class="params">        String funcDescription)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">funcNameRegExp</span> <span class="operator">=</span> funcName;</span><br><span class="line">    <span class="type">String</span> <span class="variable">funcDescriptionRegExp</span> <span class="operator">=</span>  <span class="string">&quot;^&quot;</span> + funcName + <span class="string">&quot;$&quot;</span>;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">res</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">    res.put(</span><br><span class="line">            Constants.featureList,</span><br><span class="line">            JSONObject.parseArray(JSON.toJSONString(featureRepository.findFeatureByRegExp(funcNameRegExp, funcDescriptionRegExp))));</span><br><span class="line">    <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再说增删改。项目中这些功能的实现大体如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">\\ 增</span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">addExamine</span><span class="params">(String examineName, <span class="type">double</span> examinePrice, String roomName)</span> &#123;</span><br><span class="line">    List&lt;Examine&gt; targetExamineList = examineRepository.findAll().stream()</span><br><span class="line">            .filter(examine -&gt; Objects.equals(examine.getExamineName(), examineName))</span><br><span class="line">            .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Objects.equals(targetExamineList.size(), <span class="number">0</span>)) &#123;</span><br><span class="line">        Optional&lt;Room&gt; targetRoomOptional = roomRepository.findById(roomName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (targetRoomOptional.isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Examine</span> <span class="variable">newExamine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Examine</span>();</span><br><span class="line">            newExamine.setExamineName(examineName);</span><br><span class="line">            newExamine.setExaminePrice(examinePrice);</span><br><span class="line">            newExamine.setExamineRoom(targetRoomOptional.get());</span><br><span class="line"></span><br><span class="line">            <span class="type">Examine</span> <span class="variable">addedExamine</span> <span class="operator">=</span> examineRepository.saveAndFlush(newExamine);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(addedExamine);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">\\ 改</span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">updateExamine</span><span class="params">(<span class="type">int</span> examineId, String examineName, <span class="type">double</span> examinePrice, String roomName)</span> &#123;</span><br><span class="line">    Optional&lt;Examine&gt; targetExamineOptional = examineRepository.findById(examineId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (targetExamineOptional.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        List&lt;Examine&gt; targetExamineList = examineRepository.findAll().stream()</span><br><span class="line">                .filter(examine -&gt; Objects.equals(examine.getExamineName(), examineName)</span><br><span class="line">                        &amp;&amp; !Objects.equals(examine.getExamineId(), examineId))</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        Optional&lt;Room&gt; targetRoomOptional = roomRepository.findById(roomName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (targetRoomOptional.isEmpty() || !Objects.equals(targetExamineList.size(), <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Examine</span> <span class="variable">targetExamine</span> <span class="operator">=</span> targetExamineOptional.get();</span><br><span class="line">            targetExamine.setExamineName(examineName);</span><br><span class="line">            targetExamine.setExaminePrice(examinePrice);</span><br><span class="line">            targetExamine.setExamineRoom(targetRoomOptional.get());</span><br><span class="line"></span><br><span class="line">            <span class="type">Examine</span> <span class="variable">updatedExamine</span> <span class="operator">=</span> examineRepository.saveAndFlush(targetExamine);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(updatedExamine);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">\\ 删</span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">deleteExamine</span><span class="params">(<span class="type">int</span> examineId)</span> &#123;</span><br><span class="line">    Optional&lt;Examine&gt; targetExamineOptional = examineRepository.findById(examineId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (targetExamineOptional.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        examineRepository.deleteById(examineId);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (examineRepository.findById(examineId).isEmpty()) &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(targetExamineOptional.get());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>说实话每个表增删改查写一遍还是挺繁琐的，毕竟业务逻辑上太过类似了。基本上都是这样的逻辑：</p><ul><li>增：查询重复数据存在情况$\rightarrow$查外键存在情况$\rightarrow$插入数据。</li><li>改：查自身数据存在情况$\rightarrow$查询重复数据存在情况$\rightarrow$查外键存在情况$\rightarrow$插入数据。</li><li>删：直接调用JPA的<code>deleteById</code>方法。</li></ul><p>这里的如果需要重构可以考虑利用<a href="#java%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6"><code>Java</code>反射机制</a>。事实上，项目末期时根据前端需求增加的根据数据Id查询功能就是利用这一机制写的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GeneralService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RoomRepository roomRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FeatureRepository featureRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AdmissionRepository admissionRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ArchiveRepository archiveRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ChargeRepository chargeRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ExamineRepository examineRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MedicineRepository medicineRepository;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">getDataById</span><span class="params">(String tableName, <span class="type">int</span> id)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Class&lt;?&gt; dataDaoClass = Class.forName(</span><br><span class="line">                Constants.projectPackageName + <span class="string">&quot;.&quot;</span> + Constants.systemModulePackageName + <span class="string">&quot;.&quot;</span></span><br><span class="line">                        + Constants.daoClassPackageName</span><br><span class="line">                        + <span class="string">&quot;.&quot;</span> + tableName</span><br><span class="line">                        + Constants.daoClassSuffix,</span><br><span class="line">                <span class="literal">true</span>,</span><br><span class="line">                Thread.currentThread().getContextClassLoader().getParent());</span><br><span class="line"></span><br><span class="line">        <span class="type">Method</span> <span class="variable">getByIdMethod</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Method classMethods : dataDaoClass.getMethods()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Objects.equals(classMethods.getName(), Constants.findByIdMethodName)) &#123;</span><br><span class="line">                getByIdMethod = classMethods;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Field selfField : <span class="built_in">this</span>.getClass().getDeclaredFields()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Objects.equals(selfField.getType().getName(), dataDaoClass.getName())) &#123;</span><br><span class="line">                Optional&lt;?&gt; getIdRes = (Optional&lt;?&gt;) getByIdMethod.invoke(selfField.get(<span class="built_in">this</span>), id);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (getIdRes.isEmpty()) &#123;</span><br><span class="line">                    <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(getIdRes.get());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事实上，删除功能可以直接套用这一写法。当然，在上面的<code>getDataById</code>方法中查找<code>Method</code>与<code>Field</code>的逻辑也可以进一步进行优化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Class&lt;JPARepository&gt; <span class="title function_">getDataDaoClassByTableName</span> <span class="params">(String tableName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">return</span> Class.forName(</span><br><span class="line">            Constants.projectPackageName + <span class="string">&quot;.&quot;</span> + Constants.systemModulePackageName + <span class="string">&quot;.&quot;</span></span><br><span class="line">                    + Constants.daoClassPackageName</span><br><span class="line">                    + <span class="string">&quot;.&quot;</span> + tableName</span><br><span class="line">                    + Constants.daoClassSuffix,</span><br><span class="line">            <span class="literal">true</span>,</span><br><span class="line">            Thread.currentThread().getContextClassLoader().getParent());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getDataById</span><span class="params">(String tableName, <span class="type">int</span> id)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    Class&lt;?&gt; dataDaoClass = <span class="built_in">this</span>.getDataDaoClassByTableName(tableName);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">getByIdMethod</span> <span class="operator">=</span> dataDaoClass.getMethod(Constants.findByIdMethodName, Integer.class);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">selfField</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getDeclaredField(tableName.toFirstCharLowerCase());</span><br><span class="line"></span><br><span class="line">    Optional&lt;?&gt; getIdRes = (Optional&lt;?&gt;) getByIdMethod.invoke(selfField.get(<span class="built_in">this</span>), id);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> getIdRes.isEmpty() ? ResponseHelper.constructFailedResponse(ResponseHelper.requestErrorCode) : ResponseHelper.constructSuccessResponse(getIdRes.get());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">deleteDataById</span><span class="params">(String tableName, <span class="type">int</span> id)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">JSONObject</span> <span class="variable">getDataByIdRes</span> <span class="operator">=</span> <span class="built_in">this</span>.getDataById(tableName, id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 表内查询无数据</span></span><br><span class="line">    <span class="keyword">if</span> (Object.equals(getDataByIdRes.data, <span class="literal">null</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> getDataByIdRes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Class&lt;?&gt; dataDaoClass = <span class="built_in">this</span>.getDataDaoClassByTableName(tableName);</span><br><span class="line">    <span class="type">Method</span> <span class="variable">deleteByIdMethod</span> <span class="operator">=</span> dataDaoClass.getMethod(Constants.deleteByIdMethodName, Integer.class);</span><br><span class="line">    <span class="type">Field</span> <span class="variable">selfField</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getDeclaredField(tableName.toFirstCharLowerCase());</span><br><span class="line"></span><br><span class="line">    deleteByIdMethod.invoke(selfField.get(<span class="built_in">this</span>), id);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ResponseHelper.constructSuccessResponse(getDataByIdRes.get());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了进一步简化开发工作量与代码逻辑，可以考虑先创建公共类：<code>BaseEntity</code>与<code>BaseRepository</code>，使得实体类继承前者，对应的<code>dao</code>类继承后者。</p><p>对于增改功能而言，业务逻辑中唯二的区别在于判断重复条件与判断外键存在逻辑这两项。可以考虑抽象成统一的公共方法，通过接收可变个数个参数构成的List来进行判断。更具体的，其可能是下面的实现形式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">updateDataById</span><span class="params">(</span></span><br><span class="line"><span class="params">    String tableName, </span></span><br><span class="line"><span class="params">    <span class="type">int</span> id, </span></span><br><span class="line"><span class="params">    ArrayList&lt;String&gt; duplicateConditionFields, </span></span><br><span class="line"><span class="params">    ArrayList&lt;String&gt; foreignKeys,</span></span><br><span class="line"><span class="params">    Map&lt;String, String&gt; newValues</span></span><br><span class="line"><span class="params">)</span> &#123;</span><br><span class="line">    Class&lt;?&gt; dataEntityClass = ...; <span class="comment">// 查找对应的Entity层类</span></span><br><span class="line">    Class&lt;?&gt; dataDaoClass = ...; <span class="comment">// 查找对应的Dao层类</span></span><br><span class="line">    <span class="type">Method</span> <span class="variable">updateByIdMethod</span> <span class="operator">=</span> dataDaoClass.getMethod(<span class="string">&quot;saveAndFlush&quot;</span>); <span class="comment">// 查找保存数据的方法</span></span><br><span class="line">    <span class="type">Method</span> <span class="variable">findAllMethod</span> <span class="operator">=</span> dataDaoClass.getMethod(<span class="string">&quot;findAll&quot;</span>); </span><br><span class="line">    <span class="type">Field</span> <span class="variable">selfField</span> <span class="operator">=</span> ...; <span class="comment">// 找到自身类中对应的field</span></span><br><span class="line"></span><br><span class="line">    <span class="type">Object</span> <span class="variable">targetData</span> <span class="operator">=</span> dataEntityClass.getConstructor().newInstance(); <span class="comment">//获取要更新数据</span></span><br><span class="line"></span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">isForeignKeyExist</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果满足重复条件或外键不存在则直接返回，这里可以进一步优化</span></span><br><span class="line">    <span class="keyword">for</span>(foreignKey : foreignKeys) &#123;</span><br><span class="line">        Class&lt;?&gt; foreignKeyDaoClass = Class.forName(targetData.getDeclaredField(foreignKey).getType().getName() + ...); <span class="comment">//找到外键对应Dao层类</span></span><br><span class="line">        <span class="type">Method</span> <span class="variable">findByIdMethod</span> <span class="operator">=</span> foreignKeyDaoClass.getMethod(<span class="string">&quot;findById&quot;</span>); </span><br><span class="line">        <span class="type">Field</span> <span class="variable">selfField</span> <span class="operator">=</span> ...; <span class="comment">// 找到自身类中对应的field</span></span><br><span class="line">        Optional&lt;?&gt; getIdRes = (Optional&lt;?&gt;) findByIdMethod.invoke(selfField.get(<span class="built_in">this</span>), Integer.parseInt(newValues.get(foreignKey).getId()));</span><br><span class="line">        isForeignKeyExist &amp;= !getIdRes.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;?&gt; getAllRes = (List&lt;?&gt;) findAllMethod.invoke(selfField.get(<span class="built_in">this</span>));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Object.equals(getAllRes.findAll().stream().filter(data -&gt; &#123;</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">isExist</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (duplicateConditionField : duplicateConditionFields) &#123;</span><br><span class="line">            isExist &amp;= Object.equals(</span><br><span class="line">                data.getDeclaredField(duplicateConditionField).get(data), </span><br><span class="line">                targetData.getDeclaredField(duplicateConditionField).get(targetData)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isExist;</span><br><span class="line">    &#125;).collect(Collectors.toList()).size(), <span class="number">0</span>) || !isForeignKeyExist) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不满足重复条件且外键都存在时，进行数据更新</span></span><br><span class="line">    <span class="keyword">for</span> (field : targetData.getDeclaredFields()) &#123;</span><br><span class="line">        field.set(targetData, newValues.get(field.getName()).toTargetType());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    updateByIdMethod.invoke(selfField.get(<span class="built_in">this</span>), targetData);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ...; <span class="comment">// 返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考虑到增改功能逻辑也比较类似，因而增加功能的伪代码不再再次列出。</p><p>借此，大量类似的代码也可以被大幅省略，从而大幅减少工作量，同时也减少了冗余代码。</p><p>当然，这里也可以考虑使用拼接<code>SQL</code>的方法。不过考虑到后端开发上应该尽可能不写或少写原生的<code>SQL</code>，因而这一种写法更符合规范些。</p><p>通过利用上述的写法，项目中的代码可以精简许多，由此也可以使得所需要的测试代码大幅减少，从而使得项目整体的工作量大量降低。事实上，正是由于当前项目中有大量逻辑比较类似的代码，导致为满足覆盖率所需的测试代码非常庞大，从而难以完成自动化测试代码的编写。</p><p>除此之外，一些类内的方法也可以作出一些更改。考虑到方法链的写法更加符合直觉，且也在一定程度上能提升开发效率并使代码更加简洁（尽管在一定程度上破坏了<code>.</code>运算符的原有语义，且也不是很符合 <a href="CQRS">CQRS</a>），因而我个人更倾向于尽可能使用方法链的写法。</p><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><p>我个人而言也作为开发人员参与到了前端组的开发中。事实上最大的优化点在于接口调用的时机。当前，前端组在页面渲染时会请求一次后端接口，获取全部数据并渲染到页面上。之后，在进行关键词查找、数据插入、数据删除时各自会调用一次接口。至此为止都是比较合理的，当数据量庞大时前端不应该负责数据的查找工作，利用在服务器侧进行过优化的查询接口比较合理。然而，前端在进行数据编辑时，则是采用下面的流程：</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/mermaid-4.png" alt="sequence"></p><p>由于在包含全部数据的页面进行初期渲染时每条数据的全部内容前端都已经获取到，因而选中数据进入编辑页面时完全可以直接利用前端已经拿到的数据进行渲染，不需要再次调用后端端口。且不谈在网络延迟较高的情况下，上面的做法会使得用户体验较差，在服务器有大量请求的情况下，前端冗余的调用会加重服务器的负担，从而影响性能。</p><p>另一方面我也注意到，前端由于没有将方法应用到了页面渲染的各个阶段，从而导致了某些请求会被重复多次执行，这也是影响性能的一大问题。当然，最好的解决方法应是前后端都做一下防抖处理。</p><h1 id="一些其他"><a href="#一些其他" class="headerlink" title="一些其他"></a>一些其他</h1><p>开发上的问题大体如上，基本上都是后续项目中值得进行进一步更改的地方。除此以外，整个项目的生命周期中最最值得被后续继承的地方在于严格的PR-Code Review制度与文档的维护。其中前者保证了代码的质量与规范，后者则提高了有效沟通的效率。这两者才是在开发过程中降低工作量与各类成本的最关键因素。</p><h1 id="名词释义"><a href="#名词释义" class="headerlink" title="名词释义"></a>名词释义</h1><h2 id="RAD"><a href="#RAD" class="headerlink" title="RAD"></a>RAD</h2><p>快速应用开发模型（Rapid Application Development），又称V模型。似乎是为了改进瀑布式模型而在上世纪70至80年代提出的。这一模型大体上遵循下图的几个阶段：</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/RAD-model.webp" alt="picture"></p><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>SOA（面向服务架构）的一种变体，提倡将单一应用程序划分为松耦合的服务组，每个服务可独立部署。其概念最早于2005年提出。</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/microservice.png" alt="picture"></p><h2 id="微前端"><a href="#微前端" class="headerlink" title="微前端"></a>微前端</h2><p>2016年被正式提出，是微服务这一概念被扩展到前端的一种应用形式，便于新老项目的共存与过渡，以及项目独立开发等。</p><p><img src="/pikapikapi-blog-hexo/2023/04/28/SoftwareDevelopementInsights-20230428/mircro-frontend.png" alt="picture"></p><h2 id="Java反射机制"><a href="#Java反射机制" class="headerlink" title="Java反射机制"></a><code>Java</code>反射机制</h2><p><code>Java</code>先编译后运行，对象类型在编译期确定。在程序运行时类被动态加载，当类没被用到时没有被加载到JVM，因而利用反射，可以在运行时获得类的各种内容。通过利用反射，可以动态地创建对象，更加灵活，但是会消耗系统资源。</p><h2 id="CQRS"><a href="#CQRS" class="headerlink" title="CQRS"></a>CQRS</h2><p>Command Query Responsibility Segregation，即命令查询职责分离模式，要求一个方法更改对象的状态或返回一个结果，但是不能同时包含这两个行为。从某种角度来说算是继承了从前将系统交互视为CRUD的思想。相较之下，方法链（Method Chaining）语法中由于对象被引用一次即可被多次调用，从某种意义上违反了这一原则。</p><p>更具体的，符合CQRS与<code>.</code>运算符原有语义（<code>调用者.操作名</code>）的写法形如下面的形式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Person</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">p.getWater();</span><br><span class="line">p.drinkWater();</span><br><span class="line">p.getThirsty();</span><br></pre></td></tr></table></figure><p>而方法链则形如下面的形式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Person</span>().getWater().drinkWater().getThirsty();</span><br></pre></td></tr></table></figure><p>这种写法更符合直觉，同时可以节省临时变量、简化代码。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>When I should use one to one relationship? (2012, September 7). Stack Overflow. <a href="https://stackoverflow.com/questions/12318870/when-i-should-use-one-to-one-relationship">https://stackoverflow.com/questions/12318870/when-i-should-use-one-to-one-relationship</a></li><li>search using regex in JPA. (2020, June 15). Stack Overflow. <a href="https://stackoverflow.com/questions/62379559/search-using-regex-in-jpa">https://stackoverflow.com/questions/62379559/search-using-regex-in-jpa</a></li><li>Using Java Reflection. (n.d.). Using Java Reflection. <a href="https://www.oracle.com/technical-resources/articles/java/javareflection.html">https://www.oracle.com/technical-resources/articles/java/javareflection.html</a></li><li>Rapid application development - Wikipedia. (2014, July 2). Rapid Application Development - Wikipedia. <a href="https://en.wikipedia.org/wiki/Rapid_application_development">https://en.wikipedia.org/wiki/Rapid_application_development</a></li><li>Jackson, C. (2019, June 19). Micro Frontends. martinfowler.com. <a href="https://martinfowler.com/articles/micro-frontends.html">https://martinfowler.com/articles/micro-frontends.html</a></li><li>M. (n.d.). CQRS pattern - Azure Architecture Center. CQRS Pattern - Azure Architecture Center | Microsoft Learn. <a href="https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs">https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs</a></li><li>Method chaining - why is it a good practice, or not? (2009, July 9). Stack Overflow. <a href="https://stackoverflow.com/questions/1103985/method-chaining-why-is-it-a-good-practice-or-not">https://stackoverflow.com/questions/1103985/method-chaining-why-is-it-a-good-practice-or-not</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客 &lt;br&gt;发表日期：2023.4.28&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大四下最后的一门课也结束了。这门课大体是由数个人组成一个小小团体进行一个小小项目从零到一的完整开发过程，不同于其他课程，这个项目要求以类似于实际开发</summary>
      
    
    
    
    <category term="技术" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="开发" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>生成n位全部二进制数，数组形式：蚂蚁爬杆问题</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2021/09/24/OOADAntProblem-20210924/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2021/09/24/OOADAntProblem-20210924/</id>
    <published>2021-09-24T05:56:27.000Z</published>
    <updated>2024-07-23T13:47:54.438Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文首发于<a href="https://blog.csdn.net/weixin_42553007/article/details/120447886?spm=1001.2014.3001.5502">CSDN</a> <br>发表日期：2021.9.24</p></blockquote><p>OOAD第一次项目，以OOAD思想实现蚂蚁爬杆问题解法。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>先重述一下蚂蚁爬杆问题：</p><blockquote><p>有一根300 厘米的细木杆，在第30厘米、80厘米、110厘米、160厘米、250厘米这五个位置上各有一只蚂蚁。木杆很细，不能同时通过两只蚂蚁。 <br>开始时，蚂蚁的头朝左还是朝右是任意的，它们只会朝前走或调头，但不会后退。 当任意两只蚂蚁碰头时，两只蚂蚁会同时调头朝相反方向走。假设蚂蚁们每秒钟可以走5厘米的距离。 <br><strong>注：不允许穿越对方身体继续直行。</strong> <br>请编写一个程序，计算各种可能情形下所有蚂蚁都离开木杆的最小时间和最大时间。</p></blockquote><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>在编写过程中设置了一个<code>GameRoom</code>类用于模拟运行全部蚂蚁的爬行情况，其中需要一个函数来生成所有可能的方向组合。</p><p>我在写几个类的头文件最开始定义了一个游戏数据结构体，用于存放每一种方向组合的具体蚂蚁初试方向与游戏的结束时间：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">GameData</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">bool</span> antDirection[DefaultAnt.antcnt];</span><br><span class="line">    <span class="type">int</span> gameTime;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>同时在蚂蚁类中以<code>bool</code>值定义了蚂蚁行进的方向，以右为正：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The Ant class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ant</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> antId;</span><br><span class="line">    <span class="type">double</span> velocity;</span><br><span class="line">    <span class="type">bool</span> direction;     <span class="comment">// True stands for right.</span></span><br><span class="line">    <span class="type">double</span> location;</span><br><span class="line">    <span class="type">bool</span> isAlive;       <span class="comment">// True stands for alive.</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    </span><br><span class="line">};</span><br></pre></td></tr></table></figure><p><code>GameRoom</code>类如下构造：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The GameRoom class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameRoom</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> incTime;</span><br><span class="line">    GameData stGameData[DefaultAnt.GroupCnt];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GameRoom</span> ();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">buildDirections</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">playGames</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">start</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>初步思想如下：</p><p>将结构体数组中按用于存放方向的数组展开，组合成<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.279ex" height="1.528ex" role="img" focusable="false" viewBox="0 -675.5 1007.3 675.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>行，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>列的矩阵，其中第<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.781ex" height="1.52ex" role="img" focusable="false" viewBox="0 -661 345 672"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>行<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="0.932ex" height="1.957ex" role="img" focusable="false" viewBox="0 -661 412 865"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g></g></g></svg></mjx-container>列的项为<code>stGameData[i].antDirection[j]</code>。</p><p>第一列自上而下依次赋值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="15.716ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 6946.4 860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1889.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2389.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2834,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3334,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3778.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4278.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(4723.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5223.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(5668,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(6168.2,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(6668.4,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g></g></g></svg></mjx-container>。</p><p>第二列自上而下依次赋值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="19.99ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 8835.8 860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1889.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2389.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2834,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(3334,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3778.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(4278.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(4723.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(5223.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(5668,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6168,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(6612.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(7112.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(7557.3,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(8057.6,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(8557.8,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g></g></g></svg></mjx-container>。</p><p>第三列自上而下依次赋值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="37.088ex" height="1.946ex" role="img" focusable="false" viewBox="0 -666 16393.1 860"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(944.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(1444.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1889.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(2389.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2834,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(3334,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(3778.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4278.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(4723.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5223.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(5668,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6168,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(6612.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(7112.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(7557.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(8057.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(8502,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(9002,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(9446.7,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(9946.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(10391.3,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(10891.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(11336,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(11836,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(12280.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(12780.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(13225.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(13725.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(14170,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(14670,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(15114.7,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(15614.9,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(16115.1,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g></g></g></svg></mjx-container>。</p><p>即<code>stGameData[i].antDirection[j] = (i &gt;&gt; j) % 2</code>。</p><p>因而如下构造生产函数：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Every situation is generalized.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GameRoom::buildDirections</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> divis = <span class="number">0</span>; divis &lt; DefaultAnt.antcnt; divis ++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> tmpdivi = <span class="built_in">pow</span> (<span class="number">2</span>, divis);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.GroupCnt; i += <span class="number">2</span> * tmpdivi)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; tmpdivi; j ++)</span><br><span class="line">                stGameData[j].antDirection[divis] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p = i + tmpdivi; p &lt; i + <span class="number">2</span> * tmpdivi; p ++)</span><br><span class="line">                stGameData[p].antDirection[divis] = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>第一层<code>for</code>循环用于设置计算<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>次，第二层<code>for</code>循环用于计算每一个结构题内方向数组应从第几位开始赋值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>，最内层的两个<code>for</code>循环用于赋值<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>和<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container></p><p>算法时间复杂度可能稍高······</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>最后贴上OOAD思想写的爬杆问题解法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Ant.h</span></span><br><span class="line"><span class="comment">//  Ant</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> Ant_h</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Ant_h</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DefaultStickData</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> leftEnd = <span class="number">0</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> rightEnd = <span class="number">300</span>;</span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DefaultAntData</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> antcnt = <span class="number">5</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> GroupCnt = <span class="number">32</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> speed = <span class="number">5</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> direct = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> loc[<span class="number">5</span>] = {<span class="number">30</span>, <span class="number">80</span>, <span class="number">110</span>, <span class="number">160</span>, <span class="number">250</span>};</span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> DefaultStickData DefaultStick;</span><br><span class="line"><span class="type">const</span> DefaultAntData DefaultAnt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">GameData</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">bool</span> antDirection[DefaultAnt.antcnt];</span><br><span class="line">    <span class="type">int</span> gameTime;</span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The Ant class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ant</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> antId;</span><br><span class="line">    <span class="type">double</span> velocity;</span><br><span class="line">    <span class="type">bool</span> direction;     <span class="comment">// True stands for right.</span></span><br><span class="line">    <span class="type">double</span> location;</span><br><span class="line">    <span class="type">bool</span> isAlive;       <span class="comment">// True stands for alive.</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Ant</span> ();</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setAnt</span> <span class="params">(<span class="type">int</span> antID, <span class="type">double</span> vel, <span class="type">bool</span> dir, <span class="type">double</span> loc)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">changeDirection</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">creeping</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isColllision</span> <span class="params">(<span class="type">bool</span> isCol)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isLive</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">changeLive</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">getLocation</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">getVelocity</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">getDirection</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Ant class is initialized.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Ant::<span class="built_in">Ant</span> ()</span><br><span class="line">{</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Ant::setAnt</span> <span class="params">(<span class="type">int</span> antID, <span class="type">double</span> vel, <span class="type">bool</span> dir, <span class="type">double</span> loc)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    antId = antID;</span><br><span class="line">    velocity = vel;</span><br><span class="line">    direction = dir;</span><br><span class="line">    location = loc;</span><br><span class="line">    isAlive = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The ant's direction is changed.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Ant::changeDirection</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (isAlive)</span><br><span class="line">        direction = !direction;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function keeps the ant creeping by 1 second.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Ant::creeping</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (isAlive)</span><br><span class="line">        <span class="keyword">if</span> (direction == <span class="literal">true</span>)</span><br><span class="line">            location += velocity;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            location -= velocity;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: This function returns a bool value on the basis of isCol given by the detectCollision function in CreepingGame.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Ant::isColllision</span> <span class="params">(<span class="type">bool</span> isCol)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> isCol;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The status of the ant is retuned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Ant::isLive</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> isAlive;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The status of the ant is changed.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Ant::changeLive</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{ </span><br><span class="line">    <span class="keyword">if</span> (isAlive)</span><br><span class="line">        isAlive = !isAlive;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function prints the ant's location.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Ant::getLocation</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> location;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function prints the ant's velocity.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Ant::getVelocity</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> velocity;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function prints the ant's direction.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Ant::getDirection</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> direction;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The Stick class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Stick</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">double</span> leftLocation;</span><br><span class="line">    <span class="type">double</span> rightLocation;</span><br><span class="line">    <span class="type">int</span> livingAnts;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Stick</span> ();</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">setStick</span> <span class="params">(<span class="type">double</span> leftLoc, <span class="type">double</span> rightLoc)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isOut</span> <span class="params">(Ant tmpAnt)</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">killAnt</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getLivAntCnt</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The stick is initialized, giving the value of leftLocation is smaller than that of rightLocation.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Stick::<span class="built_in">Stick</span> ()</span><br><span class="line">{</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Stick::setStick</span> <span class="params">(<span class="type">double</span> leftLoc, <span class="type">double</span> rightLoc)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    leftLocation = leftLoc;</span><br><span class="line">    rightLocation = rightLoc;</span><br><span class="line">    livingAnts = DefaultAnt.antcnt;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function examines whether the given ant is out of the stick, true stands for out.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Stick::isOut</span> <span class="params">(Ant tmpAnt)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (tmpAnt.<span class="built_in">getLocation</span> () &lt;= leftLocation || tmpAnt.<span class="built_in">getLocation</span> () &gt;= rightLocation)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The amount of ants decreases by 1.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Stick::killAnt</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    livingAnts --;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The amount of living ants is returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Stick::getLivAntCnt</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> livingAnts;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The CreepingGame class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CreepingGame</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> gameTime;</span><br><span class="line">    <span class="type">bool</span> isGameOver;       <span class="comment">// True stands for not over.</span></span><br><span class="line">    <span class="type">double</span> incTim;</span><br><span class="line">    Ant livant[DefaultAnt.antcnt];</span><br><span class="line">    Stick curstick;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">CreepingGame</span> (<span class="type">int</span> gameTim = <span class="number">0</span>, <span class="type">bool</span> isGameOve = <span class="literal">false</span>, <span class="type">double</span> incT = <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">drivingGame</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">startGame</span> <span class="params">(GameData gData)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">detectCollision</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isAllDead</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">getGameStatus</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">getGameTime</span> <span class="params">()</span></span>;</span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The Game is initialized.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">CreepingGame::<span class="built_in">CreepingGame</span> (<span class="type">int</span> gameTim, <span class="type">bool</span> isGameOve, <span class="type">double</span> incT)</span><br><span class="line">{</span><br><span class="line">    gameTime = gameTim;</span><br><span class="line">    isGameOver = isGameOve;</span><br><span class="line">    incTim = incT;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The game's time is increased by 1 second;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreepingGame::drivingGame</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        gameTime += incTim;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">detectCollision</span> ();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.antcnt; i++)</span><br><span class="line">            <span class="keyword">if</span> (livant[i].<span class="built_in">isLive</span> ())</span><br><span class="line">                livant[i].<span class="built_in">creeping</span> ();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.antcnt; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (livant[i].<span class="built_in">isLive</span> ())</span><br><span class="line">                <span class="keyword">if</span> (curstick.<span class="built_in">isOut</span> (livant[i]))</span><br><span class="line">                {</span><br><span class="line">                    livant[i].<span class="built_in">changeLive</span> ();</span><br><span class="line">                    curstick.<span class="built_in">killAnt</span> ();</span><br><span class="line">                }</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isAllDead</span> () == <span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    isGameOver = <span class="literal">true</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The game is started and the stick and ants are initialized.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreepingGame::startGame</span> <span class="params">(GameData gData)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    curstick.<span class="built_in">setStick</span> (DefaultStick.leftEnd, DefaultStick.rightEnd);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.antcnt; i ++)</span><br><span class="line">        livant[i].<span class="built_in">setAnt</span> (i, DefaultAnt.speed, gData.antDirection[i], DefaultAnt.loc[i]);</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Collision are detected and ants' directions are changed.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreepingGame::detectCollision</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> tmpantid = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.antcnt; i ++)</span><br><span class="line">    {</span><br><span class="line">        tmpantid = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span> (livant[i].<span class="built_in">isLive</span> ())</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span> (livant[i].<span class="built_in">getDirection</span> () == <span class="literal">true</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; DefaultAnt.antcnt; j ++)</span><br><span class="line">                    <span class="keyword">if</span> (livant[j].<span class="built_in">isLive</span> ())</span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span> (tmpantid == <span class="number">-1</span>)</span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span> (livant[j].<span class="built_in">getLocation</span> () &gt; livant[i].<span class="built_in">getLocation</span> ())</span><br><span class="line">                                tmpantid = j;</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span> (livant[j].<span class="built_in">getLocation</span> () &gt; livant[i].<span class="built_in">getLocation</span> () &amp;&amp; livant[j].<span class="built_in">getLocation</span> () &lt; livant[tmpantid].<span class="built_in">getLocation</span> ())</span><br><span class="line">                                tmpantid = j;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">if</span> (tmpantid != <span class="number">-1</span>)</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">abs</span> (livant[i].<span class="built_in">getLocation</span> () - livant[tmpantid].<span class="built_in">getLocation</span> ()) &lt;= (livant[i].<span class="built_in">getVelocity</span> () + livant[tmpantid].<span class="built_in">getVelocity</span> ()))</span><br><span class="line">                    {</span><br><span class="line">                        livant[i].<span class="built_in">changeDirection</span> ();</span><br><span class="line">                        livant[tmpantid].<span class="built_in">changeDirection</span> ();</span><br><span class="line">                    }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; DefaultAnt.antcnt; j ++)</span><br><span class="line">                    <span class="keyword">if</span> (livant[j].<span class="built_in">isLive</span> ())</span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span> (tmpantid == <span class="number">-1</span>)</span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span> (livant[j].<span class="built_in">getLocation</span> () &lt; livant[i].<span class="built_in">getLocation</span> ())</span><br><span class="line">                                tmpantid = j;</span><br><span class="line">                        }</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span> (livant[j].<span class="built_in">getLocation</span> () &lt; livant[i].<span class="built_in">getLocation</span> () &amp;&amp; livant[j].<span class="built_in">getLocation</span> () &gt; livant[tmpantid].<span class="built_in">getLocation</span> ())</span><br><span class="line">                                tmpantid = j;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                <span class="keyword">if</span> (tmpantid != <span class="number">-1</span>)</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">abs</span> (livant[i].<span class="built_in">getLocation</span> () - livant[tmpantid].<span class="built_in">getLocation</span> ()) &lt;= (livant[i].<span class="built_in">getVelocity</span> () + livant[tmpantid].<span class="built_in">getVelocity</span> ()))</span><br><span class="line">                    {</span><br><span class="line">                        livant[i].<span class="built_in">changeDirection</span> ();</span><br><span class="line">                        livant[tmpantid].<span class="built_in">changeDirection</span> ();</span><br><span class="line">                    }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function judges whether all the ants are dead.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CreepingGame::isAllDead</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (curstick.<span class="built_in">getLivAntCnt</span> () &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The status of the game is returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CreepingGame::getGameStatus</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> isGameOver;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The time of the game is returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">CreepingGame::getGameTime</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> gameTime;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> The GameRoom class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GameRoom</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> incTime;</span><br><span class="line">    GameData stGameData[DefaultAnt.GroupCnt];</span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GameRoom</span> ();</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">buildDirections</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">playGames</span> <span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">start</span> <span class="params">()</span></span>;</span><br><span class="line">    </span><br><span class="line">};</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: The function initializes the class.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">GameRoom::<span class="built_in">GameRoom</span> ()</span><br><span class="line">{</span><br><span class="line">    incTime = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.GroupCnt; i ++)</span><br><span class="line">        stGameData[i].gameTime = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Every situation is generalized.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GameRoom::buildDirections</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> divis = <span class="number">0</span>; divis &lt; DefaultAnt.antcnt; divis ++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> tmpdivi = <span class="built_in">pow</span> (<span class="number">2</span>, divis);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.GroupCnt; i += <span class="number">2</span> * tmpdivi)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; tmpdivi; j ++)</span><br><span class="line">                stGameData[j].antDirection[divis] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> p = i + tmpdivi; p &lt; i + <span class="number">2</span> * tmpdivi; p ++)</span><br><span class="line">                stGameData[p].antDirection[divis] = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Games are played.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GameRoom::playGames</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    CreepingGame creep[DefaultAnt.GroupCnt];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; DefaultAnt.GroupCnt; i ++)</span><br><span class="line">    {</span><br><span class="line">        creep[i].<span class="built_in">startGame</span> (stGameData[i]);</span><br><span class="line">        creep[i].<span class="built_in">drivingGame</span>();</span><br><span class="line">        stGameData[i].gameTime = creep[i].<span class="built_in">getGameTime</span> ();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> maxtime = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> mintime = stGameData[<span class="number">0</span>].gameTime;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; DefaultAnt.GroupCnt; j ++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span> (stGameData[j].gameTime &gt; maxtime)</span><br><span class="line">            maxtime = stGameData[j].gameTime;</span><br><span class="line">        <span class="keyword">if</span> (stGameData[j].gameTime &lt; mintime)</span><br><span class="line">            mintime = stGameData[j].gameTime;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    std::cout &lt;&lt; <span class="string">"Max Time is "</span> &lt;&lt; maxtime &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"Min Time is "</span> &lt;&lt; mintime &lt;&lt; std::endl;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Post: Game starts.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GameRoom::start</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"Game started."</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="built_in">buildDirections</span> ();</span><br><span class="line">    <span class="built_in">playGames</span> ();</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">/* Ant_h */</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.cpp</span></span><br><span class="line"><span class="comment">//  Ant</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">"Ant.h"</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    GameRoom room;</span><br><span class="line">    room.<span class="built_in">start</span> ();</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文首发于&lt;a href=&quot;https://blog.csdn.net/weixin_42553007/article/details/120447886?spm=1001.2014.3001.5502&quot;&gt;CSDN&lt;/a&gt; &lt;br&gt;发表日期：202</summary>
      
    
    
    
    <category term="技术" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
    <category term="开发" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>2020年度印象最深刻动画</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/</id>
    <published>2021-01-02T06:09:40.000Z</published>
    <updated>2024-07-23T13:47:55.010Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/cover-picture.jpg" alt="cover"></p><blockquote><p>本文首发于微博，简单整理后重新发布在个人博客上<br>发表日期：2021.01.02</p></blockquote><p>翻了翻bgm20年一共标了213部，给分最高的来自深渊给了这一年唯一的九星。在其后一共标了15部8星，但真正的非续作TV动画也只有隐瞒之事、前说，映像研和lapis四部。只能感叹这一年动画片确实不好看，仔细想想十佳要凑起来大概也会有些困难。</p><p>因而整理一下，抛去短片来看个人十佳大概会是这样一个顺序：</p><ul><li>来自深渊剧场版</li><li>映像研</li><li>破晓之翼（勉强算到了非短片的十佳）</li><li>钢破烂再起二期（勉强也把他算到了20年）</li><li>新恐龙</li><li>g复国剧场</li><li>前说</li><li>白箱剧场</li><li>lapis &amp; 虹</li><li>炮T、龙魔女、sac2045、昨日之歌的多择暂且还没有结果</li></ul><h1 id="来自深渊剧场版"><a href="#来自深渊剧场版" class="headerlink" title="来自深渊剧场版"></a>来自深渊剧场版</h1><p>深渊剧场和映像研上榜可以说是很显然的。深渊亮点全在于原作和设定，但作画也确实看了个爽。</p><h1 id="映像研"><a href="#映像研" class="headerlink" title="映像研"></a>映像研</h1><p>映像研来说扳回了汤浅之前给我留下的坏印象，也是得益于原作者也好动画创作者也好，这一类关于动画的动画很难不引起动画爱好者的共鸣。水崎作为动画人的几段宣言也着实看的激动万分。</p><h1 id="破晓之翼"><a href="#破晓之翼" class="headerlink" title="破晓之翼"></a>破晓之翼</h1><p>剑盾广告片也没什么好多说的，山下和colorido的风格我个人还是蛮喜欢的，几段作画也确实好看，和隔壁新无印一比那简直是天上地下。</p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-1.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-2.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-3.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-4.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-5.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-6.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-7.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-8.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-9.jpg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/picture-10.jpg" alt="picture"></p><blockquote><p>破晓之翼第2话分镜<br>图源（按序）：<a href="https://animation-works.tumblr.com/post/628343286869934080/%E3%83%9D%E3%82%B1%E3%83%A2%E3%83%B3%E8%96%84%E6%98%8E%E3%81%AE%E7%BF%BC%EF%BC%92%E8%A9%B1%E3%82%B3%E3%83%B3%E3%83%86">新井陽次郎 animation-works</a></p></blockquote><h1 id="钢破烂再起二期"><a href="#钢破烂再起二期" class="headerlink" title="钢破烂再起二期"></a>钢破烂再起二期</h1><p>钢破烂则是意料之外的好看，虽然比不上最开始的破烂，但也算是挽回了这一系列之前的坏名声。虽然是富田但意外的很有高达味。钢之魂再起！！</p><h1 id="新恐龙"><a href="#新恐龙" class="headerlink" title="新恐龙"></a>新恐龙</h1><p>新恐龙也是不消多说的强。除了丑的不能看的3DCG恐龙以外动的都还是蛮好看的，小岛和押山确实看的很爽。川村也让这一部难得的有了些不同于一贯哆啦剧场的味道。可惜明年脚本变成了佐藤大。我还记得listeners看完以后我留言我和jin总有一个是弱智，不过仔细想想e7后的佐藤也确实不行。</p><h1 id="g复国剧场"><a href="#g复国剧场" class="headerlink" title="g复国剧场"></a>g复国剧场</h1><p>g复国可以说是相当私心了。你富野的高达本来就不适合这个年代，可是好看还是好看。</p><h1 id="前说"><a href="#前说" class="headerlink" title="前说"></a>前说</h1><p>前说则是真实。在文化障壁之下漫才本来就难以被中国观众理解，而作为讲漫才的搞笑动画来讲一来他不搞笑二来他里面的段子也没多搞笑。画面也很穷各种地方看上去都是相当的平淡和贫穷。人设不好看修的也不好看动起来也不好看，但这种种缺点叠加到一起反而体现出了主角作为新晋不入流漫才艺人努力漫才的醍醐味，就这一层意义上来讲我还是很喜欢的。</p><h1 id="白箱剧场"><a href="#白箱剧场" class="headerlink" title="白箱剧场"></a>白箱剧场</h1><p>白箱剧场说实话不好看。用一部剧场的篇幅把TV的故事重讲了一遍，多少有点无聊。不过当初白箱带给我的东西，哪怕只是一点点，多少也找回了一些。真实的落泪了。作画上看点也不多，不过结尾的中村第一遍没看出来，看到消息的时候还蛮惊讶的。</p><h1 id="lapis-虹"><a href="#lapis-虹" class="headerlink" title="lapis &amp; 虹"></a>lapis &amp; 虹</h1><p>lapis和虹，可以说是今年最佳的两部偶像片。前者相当的淳朴，相当相当的淳朴。缺点一堆但确实看得很开心。后者而言则是最好的拉拉，也是最不拉的拉拉。偶像魂堂堂燃烧。最草的是最后一集的台场独角兽，很难不想到UC最后一部虹的彼端。</p><h1 id="炮T、龙魔女、sac2045、昨日之歌"><a href="#炮T、龙魔女、sac2045、昨日之歌" class="headerlink" title="炮T、龙魔女、sac2045、昨日之歌"></a>炮T、龙魔女、sac2045、昨日之歌</h1><p>多择除了攻壳以外主要就是画的挺好看，攻壳主要就是神山。可惜变成了全3DCG，要是IG再像之前那样画出来就好了。</p><p>其他来看短片来讲松本的gotcha、山本的约定、怪物弹珠的广告片和樱花大战的广告片作画都看的挺爽的，然后木上的巴加则是看的百味杂陈。很难得还能在一个短片里同时看到山贺和贞本，不过你宅社的这短片真的莫名其妙。</p><p>总的来讲就是动画片真的不好看，然后就是希望今年好看点，不过八成没啥希望。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2021/01/02/YearBest-2020-20210102/cover-picture.jpg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于微博，简单整理后重新发布在个</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="年选" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/%E5%B9%B4%E9%80%89/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>ノート：アルバム　令和2年4月21日</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/</id>
    <published>2020-04-21T07:50:25.000Z</published>
    <updated>2024-07-23T13:47:53.978Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/cover-picture.jpeg" alt="cover"></p><blockquote><p>この記事は、私の個人ブログで最初に公開されました<br>公開日：2020.4.21</p></blockquote><p>令和元年8月6日から8月13日まで、東京。</p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-1.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-2.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-3.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-4.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-5.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-6.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-7.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-8.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-9.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-10.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-11.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-12.jpeg" alt="picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/picture-13.jpeg" alt="picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2020/04/21/Notes-20200421/cover-picture.jpeg&quot; alt=&quot;cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;この記事は、私の個人ブログで最初に公開されました&lt;b</summary>
      
    
    
    
    <category term="随想" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
    <category term="アルバム" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0/"/>
    
    <category term="アニメ" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E3%82%A2%E3%83%8B%E3%83%A1/"/>
    
    <category term="日本語" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E6%97%A5%E6%9C%AC%E8%AA%9E/"/>
    
  </entry>
  
  <entry>
    <title>Z 高达 Wave-Shooter 形态设定考</title>
    <link href="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/"/>
    <id>https://pikapikapikaori.github.io/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/</id>
    <published>2020-04-17T07:25:53.000Z</published>
    <updated>2024-07-23T13:47:55.042Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/cover-picture.jpg" alt="Cover"></p><blockquote><p>本文首发于个人博客<br>发表日期：2022.4.17</p></blockquote><h1 id="TV-版原设"><a href="#TV-版原设" class="headerlink" title="TV 版原设"></a>TV 版原设</h1><p>根据《MASTER ARCHIVE MOBILESUIT MSZ-006 Z GUNDAM》中设定，自「Z」至「ZZ」也即0087至0088年间进行过多次机体的检修。</p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-11.jpg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-9.jpg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-10.jpg" alt="Picture"></p><p>不难发现在0087年11月至0087年12月间实质上所采取的装备即是 Wave-Shooter 形态的装备。此时正值奥古与卡拉巴联手袭击乞立马扎罗基地。</p><h1 id="Wave-Shooter-形态"><a href="#Wave-Shooter-形态" class="headerlink" title="Wave-Shooter 形态"></a>Wave-Shooter 形态</h1><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-8.jpeg" alt="Picture"></p><p>设定是0087年11月换装为了可变后退翼与对应的盾牌，也就是FXA-01K型装备（虽然12月又换回去了，值得一提的是mr魂z的后裙甲喷口比较类似于12月及之后的版本，但也不是完全相同），原本似乎是90年为了模型大河原参考zp设计的（不确定，未找到确切来源），后来在北川的漫画z define中泷川基于此设计了漫画版z。</p><p>漫画版z事实上进行了大幅度的更改：驾驶舱与前裙甲中间变为了想当圆润的造型，而后者更是在变形后成为了ws形态的机头部分；胸部造型小改；盾牌分离机构使得ws形态下的枪被放置在机身下侧；腿部的变形方式似乎也有改变，使得腿部变形后不再像其他z一样比机身高出一层；可变后退翼的变化；甚至原本放置榴弹仓之处的末端增加了一处可伸缩的的机械臂（虽然我不记得漫画里用过）；另外局部配色也有修改。个人来看其实define版z的ws形态一体型更加好。</p><h2 id="漫画设定图"><a href="#漫画设定图" class="headerlink" title="漫画设定图"></a>漫画设定图</h2><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-1.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-2.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-3.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-4.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-5.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-6.jpeg" alt="Picture"></p><p><img src="/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/picture-7.jpeg" alt="Picture"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/pikapikapi-blog-hexo/2020/04/17/ZGundam-20220417/cover-picture.jpg&quot; alt=&quot;Cover&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文首发于个人博客&lt;br&gt;发表日期：2022.4.</summary>
      
    
    
    
    <category term="随笔" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="动画" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="中文" scheme="https://pikapikapikaori.github.io/pikapikapi-blog-hexo/tags/%E4%B8%AD%E6%96%87/"/>
    
  </entry>
  
</feed>
